{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts.AppComponent.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/layouts/layout.component.ts","webpack:///./src/app/config/users-menu.ts","webpack:///./src/app/theme-core/@core/core.module.ts","webpack:///./src/app/theme-core/@core/data/data.module.ts","webpack:///./src/app/theme-core/@core/data/electricity.service.ts","webpack:///./src/app/theme-core/@core/data/player.service.ts","webpack:///./src/app/theme-core/@core/data/smart-table.service.ts","webpack:///./src/app/theme-core/@core/data/state.service.ts","webpack:///./src/app/theme-core/@core/data/users.service.ts","webpack:///./src/app/theme-core/@core/module-import-guard.ts","webpack:///./src/app/theme-core/@core/utils/analytics.service.ts","webpack:///./src/app/theme-core/@theme/auth/auth.module.js","webpack:///./src/app/theme-core/@theme/auth/auth.options.js","webpack:///./src/app/theme-core/@theme/auth/auth.routes.js","webpack:///./src/app/theme-core/@theme/auth/components/auth-block/auth-block.component.js","webpack:///./src/app/theme-core/@theme/auth/components/auth-block/auth-block.component.d.ts.NbAuthBlockComponent.html","webpack:///./src/app/theme-core/@theme/auth/components/auth.component.js","webpack:///./src/app/theme-core/@theme/auth/components/auth.component.d.ts.NbAuthComponent.html","webpack:///./src/app/theme-core/@theme/auth/components/index.js","webpack:///./src/app/theme-core/@theme/auth/components/login/login.component.js","webpack:///./src/app/theme-core/@theme/auth/components/login/login.component.d.ts.NbLoginComponent.html","webpack:///./src/app/theme-core/@theme/auth/components/logout/logout.component.js","webpack:///./src/app/theme-core/@theme/auth/components/logout/logout.component.d.ts.NbLogoutComponent.html","webpack:///./src/app/theme-core/@theme/auth/components/register/register.component.js","webpack:///./src/app/theme-core/@theme/auth/components/register/register.component.d.ts.NbRegisterComponent.html","webpack:///./src/app/theme-core/@theme/auth/components/request-password/request-password.component.js","webpack:///./src/app/theme-core/@theme/auth/components/request-password/request-password.component.d.ts.NbRequestPasswordComponent.html","webpack:///./src/app/theme-core/@theme/auth/components/reset-password/reset-password.component.js","webpack:///./src/app/theme-core/@theme/auth/components/reset-password/reset-password.component.d.ts.NbResetPasswordComponent.html","webpack:///./src/app/theme-core/@theme/auth/helpers.js","webpack:///./src/app/theme-core/@theme/auth/index.js","webpack:///./src/app/theme-core/@theme/auth/services/auth-result.js","webpack:///./src/app/theme-core/@theme/auth/services/auth.service.js","webpack:///./src/app/theme-core/@theme/auth/services/index.js","webpack:///./src/app/theme-core/@theme/auth/services/interceptors/jwt-interceptor.js","webpack:///./src/app/theme-core/@theme/auth/services/interceptors/simple-interceptor.js","webpack:///./src/app/theme-core/@theme/auth/services/token/token-parceler.js","webpack:///./src/app/theme-core/@theme/auth/services/token/token-storage.js","webpack:///./src/app/theme-core/@theme/auth/services/token/token.js","webpack:///./src/app/theme-core/@theme/auth/services/token/token.service.js","webpack:///./src/app/theme-core/@theme/auth/strategies/auth-strategy-options.js","webpack:///./src/app/theme-core/@theme/auth/strategies/auth-strategy.js","webpack:///./src/app/theme-core/@theme/auth/strategies/dummy/dummy-strategy-options.js","webpack:///./src/app/theme-core/@theme/auth/strategies/dummy/dummy-strategy.js","webpack:///./src/app/theme-core/@theme/auth/strategies/index.js","webpack:///./src/app/theme-core/@theme/auth/strategies/oauth2/oauth2-strategy.js","webpack:///./src/app/theme-core/@theme/auth/strategies/oauth2/oauth2-strategy.options.js","webpack:///./src/app/theme-core/@theme/auth/strategies/password/password-strategy-options.js","webpack:///./src/app/theme-core/@theme/auth/strategies/password/password-strategy.js","webpack:///./src/app/theme-core/@theme/components/footer/footer.component.ts","webpack:///./src/app/theme-core/@theme/components/index.ts","webpack:///./src/app/theme-core/@theme/components/layout-direction-switcher/layout-direction-switcher.component.ts","webpack:///./src/app/theme-core/@theme/components/search-input/search-input.component.ts","webpack:///./src/app/theme-core/@theme/components/switcher/switcher.component.ts","webpack:///./src/app/theme-core/@theme/components/theme-settings/theme-settings.component.ts","webpack:///./src/app/theme-core/@theme/components/theme-switcher/theme-switcher.component.ts","webpack:///./src/app/theme-core/@theme/components/theme-switcher/themes-switcher-list/themes-switcher-list.component.ts.ThemeSwitcherListComponent.html","webpack:///./src/app/theme-core/@theme/components/theme-switcher/themes-switcher-list/themes-switcher-list.component.ts","webpack:///./src/app/theme-core/@theme/components/tiny-mce/tiny-mce.component.ts","webpack:///./src/app/theme-core/@theme/layouts/index.ts","webpack:///./src/app/theme-core/@theme/layouts/one-column/one-column.layout.ts","webpack:///./src/app/theme-core/@theme/layouts/sample/sample.layout.ts","webpack:///./src/app/theme-core/@theme/layouts/three-columns/three-columns.layout.ts","webpack:///./src/app/theme-core/@theme/layouts/two-columns/two-columns.layout.ts","webpack:///./src/app/theme-core/@theme/pipes/capitalize.pipe.ts","webpack:///./src/app/theme-core/@theme/pipes/index.ts","webpack:///./src/app/theme-core/@theme/pipes/plural.pipe.ts","webpack:///./src/app/theme-core/@theme/pipes/round.pipe.ts","webpack:///./src/app/theme-core/@theme/pipes/timing.pipe.ts","webpack:///./src/app/theme-core/@theme/styles/theme.corporate.ts","webpack:///./src/app/theme-core/@theme/theme.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,uC;;;;;;;;;;;;;;;;;;;;ACjGyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;;;;;ACzE0B;AACC;AACG;AACF;AACS;AACF;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wDAAwD,2BAA2B,eAAe,WAAW,kBAAkB,WAAW,oBAAoB,kBAAkB,oBAAoB,sBAAsB,kBAAkB,wBAAwB,mBAAmB,kBAAkB,uBAAuB,aAAa,8BAA8B,mBAAmB,mBAAmB,sCAAsC,aAAa,8BAA8B,cAAc,uDAAuD,cAAc,oBAAoB,kBAAkB,mBAAmB,6BAA6B,uBAAuB,+BAA+B,cAAc,qBAAqB,eAAe,sBAAsB,yCAAyC,eAAe;AACj0B;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACO;AACR,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCbI,0DAAY;;;;;;;;;;;;;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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,SAAS,SAAS,oBAAoB;AAC5D;AACA,4BAA4B,aAAa;AACzC;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sD;AACA;AACA,+B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1KA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc,EAAE;AAClE;AACA;AACA,oDAAoD,cAAc,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,uC;;;;;;;;;;;;;;;;;;;AC3C6B;AACA;AACJ;AACI;AACJ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,+FAAwC,wBAAwB,EAAE;AAClE;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,+FAAwC,wBAAwB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAA6C;AAC3E;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C;AAC7E;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C;AAC7E;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAgE;AAC1F;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gEAAgE;AAC5F;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gEAAgE;AAC5F;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAA2C,eAAe,EAAE;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,2BAA2B;AAC5D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C;AACA,eAAe,OAAO;AACtB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB;AACnB;AACA;AACA,8DAA8D,4CAA4C,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,6EAAwB;AACjC,SAAS,gCAAgC,wIAA4C,IAAI;AACzF,MAAM;AACN;AACA,CAAC;AACO;AACR,wC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;ACR+B;AACX;AACI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,uDAAuD;AACvD,SAAS,gEAAkB;AAC3B,MAAM;AACN;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;ACtCuC;AACnB;AACI;AACa;AACrC;AACA;AACA,oCAAoC,8BAA8B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,0DAA0D;AAC1D,SAAS,gEAAkB;AAC3B,SAAS,gCAAgC,gJAAoD,IAAI;AACjG,MAAM;AACN;AACA,CAAC;AACO;AACR,8C;;;;;;;;;;;;;;;;;;AC3C6C;AACjB;AACH;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,iCAAiC,EAAE;AAChG;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,sDAAsD;AACtD,SAAS,gCAAgC,8FAAgD,IAAI;AAC7F,SAAS,4BAA4B,oIAAwC,IAAI;AACjF,MAAM;AACN;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;ACjDA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACoB;AACS;AAC9B;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,IAAI,yDAAyD;AAC7D;AACA;AACA;AACA;AACA;AACA,IAAI,0DAA0D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,sDAAsD;AACtD,SAAS,6EAA6B;AACtC,MAAM;AACN;AACA,CAAC;AACO;AACR,yC;;;;;;;;;;;;;;;;;;;AC/FA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACA;AACR,iC;;;;;;;;;;;;;;;;;;AClTqB;AACyB;AACtB;AACC;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,kGAA2C,gBAAgB,EAAE;AAC7D;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B,mBAAmB;AACnB;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,iDAAiD;AACjD,SAAS,uEAAwB;AACjC,MAAM;AACN;AACA,CAAC;AACO;AACR,yC;;;;;;;;;;;;;ACrGA;AAAA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,iD;;;;;;;;;;;;;;;;;ACNuB;AACiB;AACZ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAiC,SAAS,eAAe;AACzD;AACA;AACA,sFAAiC,SAAS,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR,yC;;;;;;;;;;;;;;;;ACvCA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC+B;AACJ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,kD;;;;;;;;;;;;;;;;;;;AC3BA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACoB;AACQ;AACb;AACS;AACF;AACQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;;;ACRA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AAC6B;AACW;AACf;AACI;AACQ;AACjB;AACK;AACF;AAC8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,2LAAiG,+CAA+C,EAAE;AAClJ;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,wCAAwC;AACxC;AACA,4LAAkG,oDAAoD,EAAE;AACxJ,aAAa;AACb;AACA,2LAAiG,+CAA+C,EAAE,iFAA0B,4DAA4D,EAAE;AAC1O,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B,4OAA4O;AAC3Q;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,uDAAuD;AACvD,SAAS,yEAAoB;AAC7B,SAAS,wEAAwB;AACjC,SAAS,gCAAgC,gIAAmC,IAAI;AAChF,MAAM;AACN;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;AC1QA;AAAA;AACA;AACA;AACA;AACA;AAC4B;AAC5B;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,mD;;;;;;;;;;;;;;;;;AChDA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AAC4B;AACI;AACJ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,qD;;;;;;;;;;;;;;;;;;;;;ACnHA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACoB;AACmB;AACf;AACI;AACQ;AACd;AACE;AACS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iEAA8B;AAC9B;AACA;AACA;AACA;AACA,oDAAoD,sBAAsB;AAC1E,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC;AACjF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,yDAAyD;AACzD,SAAS,yEAAoB;AAC7B,SAAS,wEAAwB;AACjC,MAAM;AACN;AACA,CAAC;AACO;AACR,6C;;;;;;;;;;;;;ACvUA;AAAA;IAAA;IAcA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfyC;AACY;AACR;AACY;AACA;AACZ;AACkC;AACK;;;;;;;;;;;;;;;;;;ACRzB;AACiB;AACxB;AAErD;IAsBE,0CAAoB,gBAA0C;QAA9D,iBAMC;QANmB,qBAAgB,GAAhB,gBAAgB,CAA0B;QAN9D,eAAU,GAAG,gEAAiB,CAAC;QAE/B,UAAK,GAAG,IAAI,CAAC;QAEJ,aAAQ,GAAY,KAAK,CAAC;QAGjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAE7D,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE;aACtC,IAAI,CAAC,0EAAS,CAAC,cAAM,YAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;aACjC,SAAS,CAAC,s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","file":"main.js","sourcesContent":["var map = {\n\t\"../app/modules/pages.module.ngfactory\": [\n\t\t\"./src/app/modules/pages.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"app-modules-pages-module-ngfactory\"\n\t],\n\t\"./../modules/reports.module.ngfactory\": [\n\t\t\"./src/app/modules/reports.module.ngfactory.js\",\n\t\t\"modules-reports-module-ngfactory\"\n\t],\n\t\"./../modules/user.module.ngfactory\": [\n\t\t\"./src/app/modules/user.module.ngfactory.js\",\n\t\t\"common\",\n\t\t\"modules-user-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","<router-outlet></router-outlet>","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n/* tslint:disable */\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-app',\r\n  template: '<router-outlet></router-outlet>',\r\n})\r\nexport class AppComponent { \r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n/* tslint:disable */\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CoreModule } from './theme-core/@core/core.module';\r\nimport { AppComponent } from './app.component';\r\nimport { routing, appRoutingProviders } from './routing/app-routing.module';\r\nimport { ThemeModule } from './theme-core/@theme/theme.module';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    routing,\r\n    NgbModule.forRoot(),\r\n    ThemeModule.forRoot(),\r\n    CoreModule.forRoot(),\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [\r\n    { provide: APP_BASE_HREF, useValue: '/' },\r\n  ],\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { NbMenuService, NbSidebarService } from '@nebular/theme';\r\nimport { UserService } from '../../theme-core/@core/data/users.service';\r\nimport { AnalyticsService } from '../../theme-core/@core/utils/analytics.service';\r\nimport { MENU_USERS_ADMIN } from '../../config/users-menu';\r\n\r\n@Component({\r\n  selector: 'ngx-header',\r\n  styleUrls: ['./header.component.scss'],\r\n  templateUrl: './header.component.html',\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n\r\n  @Input() position = 'normal';\r\n\r\n  user: any;\r\n\r\n  userMenu = MENU_USERS_ADMIN;\r\n\r\n  constructor(private sidebarService: NbSidebarService,\r\n              private menuService: NbMenuService,\r\n              private userService: UserService,\r\n              private analyticsService: AnalyticsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUsers()\r\n      .subscribe((users: any) => this.user = users.nick);\r\n  }\r\n\r\n  toggleSidebar(): boolean {\r\n    this.sidebarService.toggle(true, 'menu-sidebar');\r\n    return false;\r\n  }\r\n\r\n  toggleSettings(): boolean {\r\n    this.sidebarService.toggle(false, 'settings-sidebar');\r\n    return false;\r\n  }\r\n\r\n  goToHome() {\r\n    this.menuService.navigateHome();\r\n  }\r\n\r\n  startSearch() {\r\n    this.analyticsService.trackEvent('startSearch');\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';/* tslint:disable */\r\nimport { delay, withLatestFrom, takeWhile } from 'rxjs/operators';\r\nimport {\r\n  NbMediaBreakpoint,\r\n  NbMediaBreakpointsService,\r\n  NbMenuItem,\r\n  NbMenuService,\r\n  NbSidebarService,\r\n  NbThemeService,\r\n} from '@nebular/theme';\r\n\r\nimport { StateService } from '../../theme-core/@core/data/state.service';\r\n\r\n@Component({\r\n    selector: 'new-layout',\r\n    templateUrl: './layout.component.html',\r\n    styleUrls: ['./layout.component.scss']\r\n  })\r\nexport class NewLayoutComponent implements OnDestroy {\r\n\r\n  subMenu: NbMenuItem[] = [\r\n    {\r\n      title: 'PAGE LEVEL MENU',\r\n      group: true,\r\n    },\r\n    {\r\n      title: 'Buttons',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/buttons',\r\n    },\r\n    {\r\n      title: 'Grid',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/grid',\r\n    },\r\n    {\r\n      title: 'Icons',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/icons',\r\n    },\r\n    {\r\n      title: 'Modals',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/modals',\r\n    },\r\n    {\r\n      title: 'Typography',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/typography',\r\n    },\r\n    {\r\n      title: 'Animated Searches',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/search-fields',\r\n    },\r\n    {\r\n      title: 'Tabs',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/tabs',\r\n    },\r\n  ];\r\n  layout: any = {};\r\n  sidebar: any = {};\r\n\r\n  private alive = true;\r\n\r\n  currentTheme: string;\r\n\r\n  constructor(protected stateService: StateService,\r\n              protected menuService: NbMenuService,\r\n              protected themeService: NbThemeService,\r\n              protected bpService: NbMediaBreakpointsService,\r\n              protected sidebarService: NbSidebarService) {\r\n    this.stateService.onLayoutState()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((layout: string) => this.layout = layout);\r\n\r\n    this.stateService.onSidebarState()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((sidebar: string) => {\r\n        this.sidebar = sidebar;\r\n      });\r\n\r\n    const isBp = this.bpService.getByName('is');\r\n    this.menuService.onItemSelect()\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        withLatestFrom(this.themeService.onMediaQueryChange()),\r\n        delay(20),\r\n      )\r\n      .subscribe(([item, [bpFrom, bpTo]]: [any, [NbMediaBreakpoint, NbMediaBreakpoint]]) => {\r\n\r\n        if (bpTo.width <= isBp.width) {\r\n          this.sidebarService.collapse('menu-sidebar');\r\n        }\r\n      });\r\n\r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        this.currentTheme = theme.name;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","/* tslint:disable */\r\nexport const MENU_USERS_ADMIN = [\r\n    /* tslint:disable */\r\n    { \r\n        title: 'Prerfil', \r\n        link: 'user/profile' \r\n    }, \r\n    { \r\n        title: 'Log out', \r\n        link: 'user/login-out'\r\n    }\r\n];","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NbAuthModule, NbDummyAuthStrategy } from '../@theme/auth';\r\nimport { NbSecurityModule, NbRoleProvider } from '@nebular/security';\r\nimport { of as observableOf } from 'rxjs';\r\n\r\nimport { throwIfAlreadyLoaded } from './module-import-guard';\r\nimport { DataModule } from './data/data.module';\r\nimport { AnalyticsService } from './utils/analytics.service';\r\n\r\nconst socialLinks = [\r\n  {\r\n    url: 'https://github.com/akveo/nebular',\r\n    target: '_blank',\r\n    icon: 'socicon-github',\r\n  },\r\n  {\r\n    url: 'https://www.facebook.com/akveo/',\r\n    target: '_blank',\r\n    icon: 'socicon-facebook',\r\n  },\r\n  {\r\n    url: 'https://twitter.com/akveo_inc',\r\n    target: '_blank',\r\n    icon: 'socicon-twitter',\r\n  },\r\n];\r\n\r\nexport class NbSimpleRoleProvider extends NbRoleProvider {\r\n  getRole() {\r\n    // here you could provide any role based on any auth flow\r\n    return observableOf('guest');\r\n  }\r\n}\r\n\r\nexport const NB_CORE_PROVIDERS = [\r\n  ...DataModule.forRoot().providers,\r\n  ...NbAuthModule.forRoot({\r\n\r\n    strategies: [\r\n      NbDummyAuthStrategy.setup({\r\n        name: 'email',\r\n        delay: 3000,\r\n      }),\r\n    ],\r\n    forms: {\r\n      login: {\r\n        socialLinks: socialLinks,\r\n      },\r\n      register: {\r\n        socialLinks: socialLinks,\r\n      },\r\n    },\r\n  }).providers,\r\n\r\n  NbSecurityModule.forRoot({\r\n    accessControl: {\r\n      guest: {\r\n        view: '*',\r\n      },\r\n      user: {\r\n        parent: 'guest',\r\n        create: '*',\r\n        edit: '*',\r\n        remove: '*',\r\n      },\r\n    },\r\n  }).providers,\r\n\r\n  {\r\n    provide: NbRoleProvider, useClass: NbSimpleRoleProvider,\r\n  },\r\n  AnalyticsService,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    NbAuthModule,\r\n  ],\r\n  declarations: [],\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders {\r\n    return <ModuleWithProviders>{\r\n      ngModule: CoreModule,\r\n      providers: [\r\n        ...NB_CORE_PROVIDERS,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserService } from './users.service';\r\nimport { ElectricityService } from './electricity.service';\r\nimport { StateService } from './state.service';\r\nimport { SmartTableService } from './smart-table.service';\r\nimport { PlayerService } from './player.service';\r\n\r\nconst SERVICES = [\r\n  UserService,\r\n  ElectricityService,\r\n  StateService,\r\n  SmartTableService,\r\n  PlayerService,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [\r\n    ...SERVICES,\r\n  ],\r\n})\r\nexport class DataModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return <ModuleWithProviders>{\r\n      ngModule: DataModule,\r\n      providers: [\r\n        ...SERVICES,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ElectricityService {\r\n\r\n  private data = [\r\n    {\r\n      title: '2015',\r\n      months: [\r\n        { month: 'Jan', delta: '0.97', down: true, kWatts: '816', cost: '97' },\r\n        { month: 'Feb', delta: '1.83', down: true, kWatts: '806', cost: '95' },\r\n        { month: 'Mar', delta: '0.64', down: true, kWatts: '803', cost: '94' },\r\n        { month: 'Apr', delta: '2.17', down: false, kWatts: '818', cost: '98' },\r\n        { month: 'May', delta: '1.32', down: true, kWatts: '809', cost: '96' },\r\n        { month: 'Jun', delta: '0.05', down: true, kWatts: '808', cost: '96' },\r\n        { month: 'Jul', delta: '1.39', down: false, kWatts: '815', cost: '97' },\r\n        { month: 'Aug', delta: '0.73', down: true, kWatts: '807', cost: '95' },\r\n        { month: 'Sept', delta: '2.61', down: true, kWatts: '792', cost: '92' },\r\n        { month: 'Oct', delta: '0.16', down: true, kWatts: '791', cost: '92' },\r\n        { month: 'Nov', delta: '1.71', down: true, kWatts: '786', cost: '89' },\r\n        { month: 'Dec', delta: '0.37', down: false, kWatts: '789', cost: '91' },\r\n      ],\r\n    },\r\n    {\r\n      title: '2016',\r\n      active: true,\r\n      months: [\r\n        { month: 'Jan', delta: '1.56', down: true, kWatts: '789', cost: '91' },\r\n        { month: 'Feb', delta: '0.33', down: false, kWatts: '791', cost: '92' },\r\n        { month: 'Mar', delta: '0.62', down: true, kWatts: '790', cost: '92' },\r\n        { month: 'Apr', delta: '1.93', down: true, kWatts: '783', cost: '87' },\r\n        { month: 'May', delta: '2.52', down: true, kWatts: '771', cost: '83' },\r\n        { month: 'Jun', delta: '0.39', down: false, kWatts: '774', cost: '85' },\r\n        { month: 'Jul', delta: '1.61', down: true, kWatts: '767', cost: '81' },\r\n        { month: 'Aug', delta: '1.41', down: true, kWatts: '759', cost: '76' },\r\n        { month: 'Sept', delta: '1.03', down: true, kWatts: '752', cost: '74' },\r\n        { month: 'Oct', delta: '2.94', down: false, kWatts: '769', cost: '82' },\r\n        { month: 'Nov', delta: '0.26', down: true, kWatts: '767', cost: '81' },\r\n        { month: 'Dec', delta: '1.62', down: true, kWatts: '760', cost: '76' },\r\n      ],\r\n    },\r\n    {\r\n      title: '2017',\r\n      months: [\r\n        { month: 'Jan', delta: '1.34', down: false, kWatts: '789', cost: '91' },\r\n        { month: 'Feb', delta: '0.95', down: false, kWatts: '793', cost: '93' },\r\n        { month: 'Mar', delta: '0.25', down: true, kWatts: '791', cost: '92' },\r\n        { month: 'Apr', delta: '1.72', down: false, kWatts: '797', cost: '95' },\r\n        { month: 'May', delta: '2.62', down: true, kWatts: '786', cost: '90' },\r\n        { month: 'Jun', delta: '0.72', down: false, kWatts: '789', cost: '91' },\r\n        { month: 'Jul', delta: '0.78', down: true, kWatts: '784', cost: '89' },\r\n        { month: 'Aug', delta: '0.36', down: true, kWatts: '782', cost: '88' },\r\n        { month: 'Sept', delta: '0.55', down: false, kWatts: '787', cost: '90' },\r\n        { month: 'Oct', delta: '1.81', down: true, kWatts: '779', cost: '86' },\r\n        { month: 'Nov', delta: '1.12', down: true, kWatts: '774', cost: '84' },\r\n        { month: 'Dec', delta: '0.52', down: false, kWatts: '776', cost: '95' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  // TODO: observables\r\n  getData() {\r\n    return this.data;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport class Track {\r\n  name: string;\r\n  artist: string;\r\n  url: string;\r\n  cover: string;\r\n}\r\n\r\n@Injectable()\r\nexport class PlayerService {\r\n  current: number;\r\n  playlist: Track[] = [\r\n    {\r\n      name: 'Don\\'t Wanna Fight',\r\n      artist: 'Alabama Shakes',\r\n      url: 'https://p.scdn.co/mp3-preview/6156cdbca425a894972c02fca9d76c0b70e001af',\r\n      cover: 'assets/images/cover1.jpg',\r\n    },\r\n    {\r\n      name: 'Harder',\r\n      artist: 'Daft Punk',\r\n      url: 'https://p.scdn.co/mp3-preview/92a04c7c0e96bf93a1b1b1cae7dfff1921969a7b',\r\n      cover: 'assets/images/cover2.jpg',\r\n    },\r\n    {\r\n      name: 'Come Together',\r\n      artist: 'Beatles',\r\n      url: 'https://p.scdn.co/mp3-preview/83090a4db6899eaca689ae35f69126dbe65d94c9',\r\n      cover: 'assets/images/cover3.jpg',\r\n    },\r\n  ];\r\n\r\n  random(): Track {\r\n    this.current = Math.floor(Math.random() * this.playlist.length);\r\n    return this.playlist[this.current];\r\n  }\r\n\r\n  next(): Track {\r\n    return this.getNextTrack();\r\n  }\r\n\r\n  prev() {\r\n    return this.getPrevTrack();\r\n  }\r\n\r\n  private getNextTrack(): Track {\r\n    if (this.current === this.playlist.length - 1) {\r\n      this.current = 0;\r\n    } else {\r\n      this.current++;\r\n    }\r\n\r\n    return this.playlist[this.current];\r\n  }\r\n\r\n  private getPrevTrack(): Track {\r\n    if (this.current === 0) {\r\n      this.current = this.playlist.length - 1;\r\n    } else {\r\n      this.current--;\r\n    }\r\n\r\n    return this.playlist[this.current];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class SmartTableService {\r\n\r\n  data = [{\r\n    id: 1,\r\n    firstName: 'Mark',\r\n    lastName: 'Otto',\r\n    username: '@mdo',\r\n    email: 'mdo@gmail.com',\r\n    age: '28',\r\n  }, {\r\n    id: 2,\r\n    firstName: 'Jacob',\r\n    lastName: 'Thornton',\r\n    username: '@fat',\r\n    email: 'fat@yandex.ru',\r\n    age: '45',\r\n  }, {\r\n    id: 3,\r\n    firstName: 'Larry',\r\n    lastName: 'Bird',\r\n    username: '@twitter',\r\n    email: 'twitter@outlook.com',\r\n    age: '18',\r\n  }, {\r\n    id: 4,\r\n    firstName: 'John',\r\n    lastName: 'Snow',\r\n    username: '@snow',\r\n    email: 'snow@gmail.com',\r\n    age: '20',\r\n  }, {\r\n    id: 5,\r\n    firstName: 'Jack',\r\n    lastName: 'Sparrow',\r\n    username: '@jack',\r\n    email: 'jack@yandex.ru',\r\n    age: '30',\r\n  }, {\r\n    id: 6,\r\n    firstName: 'Ann',\r\n    lastName: 'Smith',\r\n    username: '@ann',\r\n    email: 'ann@gmail.com',\r\n    age: '21',\r\n  }, {\r\n    id: 7,\r\n    firstName: 'Barbara',\r\n    lastName: 'Black',\r\n    username: '@barbara',\r\n    email: 'barbara@yandex.ru',\r\n    age: '43',\r\n  }, {\r\n    id: 8,\r\n    firstName: 'Sevan',\r\n    lastName: 'Bagrat',\r\n    username: '@sevan',\r\n    email: 'sevan@outlook.com',\r\n    age: '13',\r\n  }, {\r\n    id: 9,\r\n    firstName: 'Ruben',\r\n    lastName: 'Vardan',\r\n    username: '@ruben',\r\n    email: 'ruben@gmail.com',\r\n    age: '22',\r\n  }, {\r\n    id: 10,\r\n    firstName: 'Karen',\r\n    lastName: 'Sevan',\r\n    username: '@karen',\r\n    email: 'karen@yandex.ru',\r\n    age: '33',\r\n  }, {\r\n    id: 11,\r\n    firstName: 'Mark',\r\n    lastName: 'Otto',\r\n    username: '@mark',\r\n    email: 'mark@gmail.com',\r\n    age: '38',\r\n  }, {\r\n    id: 12,\r\n    firstName: 'Jacob',\r\n    lastName: 'Thornton',\r\n    username: '@jacob',\r\n    email: 'jacob@yandex.ru',\r\n    age: '48',\r\n  }, {\r\n    id: 13,\r\n    firstName: 'Haik',\r\n    lastName: 'Hakob',\r\n    username: '@haik',\r\n    email: 'haik@outlook.com',\r\n    age: '48',\r\n  }, {\r\n    id: 14,\r\n    firstName: 'Garegin',\r\n    lastName: 'Jirair',\r\n    username: '@garegin',\r\n    email: 'garegin@gmail.com',\r\n    age: '40',\r\n  }, {\r\n    id: 15,\r\n    firstName: 'Krikor',\r\n    lastName: 'Bedros',\r\n    username: '@krikor',\r\n    email: 'krikor@yandex.ru',\r\n    age: '32',\r\n  }, {\r\n    'id': 16,\r\n    'firstName': 'Francisca',\r\n    'lastName': 'Brady',\r\n    'username': '@Gibson',\r\n    'email': 'franciscagibson@comtours.com',\r\n    'age': 11,\r\n  }, {\r\n    'id': 17,\r\n    'firstName': 'Tillman',\r\n    'lastName': 'Figueroa',\r\n    'username': '@Snow',\r\n    'email': 'tillmansnow@comtours.com',\r\n    'age': 34,\r\n  }, {\r\n    'id': 18,\r\n    'firstName': 'Jimenez',\r\n    'lastName': 'Morris',\r\n    'username': '@Bryant',\r\n    'email': 'jimenezbryant@comtours.com',\r\n    'age': 45,\r\n  }, {\r\n    'id': 19,\r\n    'firstName': 'Sandoval',\r\n    'lastName': 'Jacobson',\r\n    'username': '@Mcbride',\r\n    'email': 'sandovalmcbride@comtours.com',\r\n    'age': 32,\r\n  }, {\r\n    'id': 20,\r\n    'firstName': 'Griffin',\r\n    'lastName': 'Torres',\r\n    'username': '@Charles',\r\n    'email': 'griffincharles@comtours.com',\r\n    'age': 19,\r\n  }, {\r\n    'id': 21,\r\n    'firstName': 'Cora',\r\n    'lastName': 'Parker',\r\n    'username': '@Caldwell',\r\n    'email': 'coracaldwell@comtours.com',\r\n    'age': 27,\r\n  }, {\r\n    'id': 22,\r\n    'firstName': 'Cindy',\r\n    'lastName': 'Bond',\r\n    'username': '@Velez',\r\n    'email': 'cindyvelez@comtours.com',\r\n    'age': 24,\r\n  }, {\r\n    'id': 23,\r\n    'firstName': 'Frieda',\r\n    'lastName': 'Tyson',\r\n    'username': '@Craig',\r\n    'email': 'friedacraig@comtours.com',\r\n    'age': 45,\r\n  }, {\r\n    'id': 24,\r\n    'firstName': 'Cote',\r\n    'lastName': 'Holcomb',\r\n    'username': '@Rowe',\r\n    'email': 'coterowe@comtours.com',\r\n    'age': 20,\r\n  }, {\r\n    'id': 25,\r\n    'firstName': 'Trujillo',\r\n    'lastName': 'Mejia',\r\n    'username': '@Valenzuela',\r\n    'email': 'trujillovalenzuela@comtours.com',\r\n    'age': 16,\r\n  }, {\r\n    'id': 26,\r\n    'firstName': 'Pruitt',\r\n    'lastName': 'Shepard',\r\n    'username': '@Sloan',\r\n    'email': 'pruittsloan@comtours.com',\r\n    'age': 44,\r\n  }, {\r\n    'id': 27,\r\n    'firstName': 'Sutton',\r\n    'lastName': 'Ortega',\r\n    'username': '@Black',\r\n    'email': 'suttonblack@comtours.com',\r\n    'age': 42,\r\n  }, {\r\n    'id': 28,\r\n    'firstName': 'Marion',\r\n    'lastName': 'Heath',\r\n    'username': '@Espinoza',\r\n    'email': 'marionespinoza@comtours.com',\r\n    'age': 47,\r\n  }, {\r\n    'id': 29,\r\n    'firstName': 'Newman',\r\n    'lastName': 'Hicks',\r\n    'username': '@Keith',\r\n    'email': 'newmankeith@comtours.com',\r\n    'age': 15,\r\n  }, {\r\n    'id': 30,\r\n    'firstName': 'Boyle',\r\n    'lastName': 'Larson',\r\n    'username': '@Summers',\r\n    'email': 'boylesummers@comtours.com',\r\n    'age': 32,\r\n  }, {\r\n    'id': 31,\r\n    'firstName': 'Haynes',\r\n    'lastName': 'Vinson',\r\n    'username': '@Mckenzie',\r\n    'email': 'haynesmckenzie@comtours.com',\r\n    'age': 15,\r\n  }, {\r\n    'id': 32,\r\n    'firstName': 'Miller',\r\n    'lastName': 'Acosta',\r\n    'username': '@Young',\r\n    'email': 'milleryoung@comtours.com',\r\n    'age': 55,\r\n  }, {\r\n    'id': 33,\r\n    'firstName': 'Johnston',\r\n    'lastName': 'Brown',\r\n    'username': '@Knight',\r\n    'email': 'johnstonknight@comtours.com',\r\n    'age': 29,\r\n  }, {\r\n    'id': 34,\r\n    'firstName': 'Lena',\r\n    'lastName': 'Pitts',\r\n    'username': '@Forbes',\r\n    'email': 'lenaforbes@comtours.com',\r\n    'age': 25,\r\n  }, {\r\n    'id': 35,\r\n    'firstName': 'Terrie',\r\n    'lastName': 'Kennedy',\r\n    'username': '@Branch',\r\n    'email': 'terriebranch@comtours.com',\r\n    'age': 37,\r\n  }, {\r\n    'id': 36,\r\n    'firstName': 'Louise',\r\n    'lastName': 'Aguirre',\r\n    'username': '@Kirby',\r\n    'email': 'louisekirby@comtours.com',\r\n    'age': 44,\r\n  }, {\r\n    'id': 37,\r\n    'firstName': 'David',\r\n    'lastName': 'Patton',\r\n    'username': '@Sanders',\r\n    'email': 'davidsanders@comtours.com',\r\n    'age': 26,\r\n  }, {\r\n    'id': 38,\r\n    'firstName': 'Holden',\r\n    'lastName': 'Barlow',\r\n    'username': '@Mckinney',\r\n    'email': 'holdenmckinney@comtours.com',\r\n    'age': 11,\r\n  }, {\r\n    'id': 39,\r\n    'firstName': 'Baker',\r\n    'lastName': 'Rivera',\r\n    'username': '@Montoya',\r\n    'email': 'bakermontoya@comtours.com',\r\n    'age': 47,\r\n  }, {\r\n    'id': 40,\r\n    'firstName': 'Belinda',\r\n    'lastName': 'Lloyd',\r\n    'username': '@Calderon',\r\n    'email': 'belindacalderon@comtours.com',\r\n    'age': 21,\r\n  }, {\r\n    'id': 41,\r\n    'firstName': 'Pearson',\r\n    'lastName': 'Patrick',\r\n    'username': '@Clements',\r\n    'email': 'pearsonclements@comtours.com',\r\n    'age': 42,\r\n  }, {\r\n    'id': 42,\r\n    'firstName': 'Alyce',\r\n    'lastName': 'Mckee',\r\n    'username': '@Daugherty',\r\n    'email': 'alycedaugherty@comtours.com',\r\n    'age': 55,\r\n  }, {\r\n    'id': 43,\r\n    'firstName': 'Valencia',\r\n    'lastName': 'Spence',\r\n    'username': '@Olsen',\r\n    'email': 'valenciaolsen@comtours.com',\r\n    'age': 20,\r\n  }, {\r\n    'id': 44,\r\n    'firstName': 'Leach',\r\n    'lastName': 'Holcomb',\r\n    'username': '@Humphrey',\r\n    'email': 'leachhumphrey@comtours.com',\r\n    'age': 28,\r\n  }, {\r\n    'id': 45,\r\n    'firstName': 'Moss',\r\n    'lastName': 'Baxter',\r\n    'username': '@Fitzpatrick',\r\n    'email': 'mossfitzpatrick@comtours.com',\r\n    'age': 51,\r\n  }, {\r\n    'id': 46,\r\n    'firstName': 'Jeanne',\r\n    'lastName': 'Cooke',\r\n    'username': '@Ward',\r\n    'email': 'jeanneward@comtours.com',\r\n    'age': 59,\r\n  }, {\r\n    'id': 47,\r\n    'firstName': 'Wilma',\r\n    'lastName': 'Briggs',\r\n    'username': '@Kidd',\r\n    'email': 'wilmakidd@comtours.com',\r\n    'age': 53,\r\n  }, {\r\n    'id': 48,\r\n    'firstName': 'Beatrice',\r\n    'lastName': 'Perry',\r\n    'username': '@Gilbert',\r\n    'email': 'beatricegilbert@comtours.com',\r\n    'age': 39,\r\n  }, {\r\n    'id': 49,\r\n    'firstName': 'Whitaker',\r\n    'lastName': 'Hyde',\r\n    'username': '@Mcdonald',\r\n    'email': 'whitakermcdonald@comtours.com',\r\n    'age': 35,\r\n  }, {\r\n    'id': 50,\r\n    'firstName': 'Rebekah',\r\n    'lastName': 'Duran',\r\n    'username': '@Gross',\r\n    'email': 'rebekahgross@comtours.com',\r\n    'age': 40,\r\n  }, {\r\n    'id': 51,\r\n    'firstName': 'Earline',\r\n    'lastName': 'Mayer',\r\n    'username': '@Woodward',\r\n    'email': 'earlinewoodward@comtours.com',\r\n    'age': 52,\r\n  }, {\r\n    'id': 52,\r\n    'firstName': 'Moran',\r\n    'lastName': 'Baxter',\r\n    'username': '@Johns',\r\n    'email': 'moranjohns@comtours.com',\r\n    'age': 20,\r\n  }, {\r\n    'id': 53,\r\n    'firstName': 'Nanette',\r\n    'lastName': 'Hubbard',\r\n    'username': '@Cooke',\r\n    'email': 'nanettecooke@comtours.com',\r\n    'age': 55,\r\n  }, {\r\n    'id': 54,\r\n    'firstName': 'Dalton',\r\n    'lastName': 'Walker',\r\n    'username': '@Hendricks',\r\n    'email': 'daltonhendricks@comtours.com',\r\n    'age': 25,\r\n  }, {\r\n    'id': 55,\r\n    'firstName': 'Bennett',\r\n    'lastName': 'Blake',\r\n    'username': '@Pena',\r\n    'email': 'bennettpena@comtours.com',\r\n    'age': 13,\r\n  }, {\r\n    'id': 56,\r\n    'firstName': 'Kellie',\r\n    'lastName': 'Horton',\r\n    'username': '@Weiss',\r\n    'email': 'kellieweiss@comtours.com',\r\n    'age': 48,\r\n  }, {\r\n    'id': 57,\r\n    'firstName': 'Hobbs',\r\n    'lastName': 'Talley',\r\n    'username': '@Sanford',\r\n    'email': 'hobbssanford@comtours.com',\r\n    'age': 28,\r\n  }, {\r\n    'id': 58,\r\n    'firstName': 'Mcguire',\r\n    'lastName': 'Donaldson',\r\n    'username': '@Roman',\r\n    'email': 'mcguireroman@comtours.com',\r\n    'age': 38,\r\n  }, {\r\n    'id': 59,\r\n    'firstName': 'Rodriquez',\r\n    'lastName': 'Saunders',\r\n    'username': '@Harper',\r\n    'email': 'rodriquezharper@comtours.com',\r\n    'age': 20,\r\n  }, {\r\n    'id': 60,\r\n    'firstName': 'Lou',\r\n    'lastName': 'Conner',\r\n    'username': '@Sanchez',\r\n    'email': 'lousanchez@comtours.com',\r\n    'age': 16,\r\n  }];\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { of as observableOf,  Observable,  BehaviorSubject } from 'rxjs';\r\nimport { takeWhile } from 'rxjs/operators';\r\n\r\nimport { NbLayoutDirectionService, NbLayoutDirection } from '@nebular/theme';\r\n\r\n@Injectable()\r\nexport class StateService implements OnDestroy {\r\n\r\n  protected layouts: any = [\r\n    {\r\n      name: 'One Column',\r\n      icon: 'nb-layout-default',\r\n      id: 'one-column',\r\n      selected: true,\r\n    },\r\n    {\r\n      name: 'Two Column',\r\n      icon: 'nb-layout-two-column',\r\n      id: 'two-column',\r\n    },\r\n    {\r\n      name: 'Center Column',\r\n      icon: 'nb-layout-centre',\r\n      id: 'center-column',\r\n    },\r\n  ];\r\n\r\n  protected sidebars: any = [\r\n    {\r\n      name: 'Sidebar at layout start',\r\n      icon: 'nb-layout-sidebar-left',\r\n      id: 'start',\r\n      selected: true,\r\n    },\r\n    {\r\n      name: 'Sidebar at layout end',\r\n      icon: 'nb-layout-sidebar-right',\r\n      id: 'end',\r\n    },\r\n  ];\r\n\r\n  protected layoutState$ = new BehaviorSubject(this.layouts[0]);\r\n  protected sidebarState$ = new BehaviorSubject(this.sidebars[0]);\r\n\r\n  alive = true;\r\n\r\n  constructor(directionService: NbLayoutDirectionService) {\r\n    directionService.onDirectionChange()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(direction => this.updateSidebarIcons(direction));\r\n\r\n    this.updateSidebarIcons(directionService.getDirection());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n\r\n  private updateSidebarIcons(direction: NbLayoutDirection) {\r\n    const [ startSidebar, endSidebar ] = this.sidebars;\r\n    const isLtr = direction === NbLayoutDirection.LTR;\r\n    const startIconClass = isLtr ? 'nb-layout-sidebar-left' : 'nb-layout-sidebar-right';\r\n    const endIconClass = isLtr ? 'nb-layout-sidebar-right' : 'nb-layout-sidebar-left';\r\n    startSidebar.icon = startIconClass;\r\n    endSidebar.icon = endIconClass;\r\n  }\r\n\r\n  setLayoutState(state: any): any {\r\n    this.layoutState$.next(state);\r\n  }\r\n\r\n  getLayoutStates(): Observable<any[]> {\r\n    return observableOf(this.layouts);\r\n  }\r\n\r\n  onLayoutState(): Observable<any> {\r\n    return this.layoutState$.asObservable();\r\n  }\r\n\r\n  setSidebarState(state: any): any {\r\n    this.sidebarState$.next(state);\r\n  }\r\n\r\n  getSidebarStates(): Observable<any[]> {\r\n    return observableOf(this.sidebars);\r\n  }\r\n\r\n  onSidebarState(): Observable<any> {\r\n    return this.sidebarState$.asObservable();\r\n  }\r\n}\r\n","\r\nimport { of as observableOf,  Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\nlet counter = 0;\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  private users = {\r\n    nick: { name: 'Nick Jones', picture: 'assets/images/nick.png' },\r\n    eva: { name: 'Eva Moor', picture: 'assets/images/eva.png' },\r\n    jack: { name: 'Jack Williams', picture: 'assets/images/jack.png' },\r\n    lee: { name: 'Lee Wong', picture: 'assets/images/lee.png' },\r\n    alan: { name: 'Alan Thompson', picture: 'assets/images/alan.png' },\r\n    kate: { name: 'Kate Martinez', picture: 'assets/images/kate.png' },\r\n  };\r\n\r\n  private userArray: any[];\r\n\r\n  constructor() {\r\n    this.userArray = Object.values(this.users);\r\n  }\r\n\r\n  getUsers(): Observable<any> {\r\n    return observableOf(this.users);\r\n  }\r\n\r\n  getUserArray(): Observable<any[]> {\r\n    return observableOf(this.userArray);\r\n  }\r\n\r\n  getUser(): Observable<any> {\r\n    counter = (counter + 1) % this.userArray.length;\r\n    return observableOf(this.userArray[counter]);\r\n  }\r\n}\r\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n  if (parentModule) {\r\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { filter } from 'rxjs/operators';\r\n\r\ndeclare const ga: any;\r\n\r\n@Injectable()\r\nexport class AnalyticsService {\r\n  private enabled: boolean;\r\n\r\n  constructor(private location: Location, private router: Router) {\r\n    this.enabled = false;\r\n  }\r\n\r\n  trackPageViews() {\r\n    if (this.enabled) {\r\n      this.router.events.pipe(\r\n        filter((event) => event instanceof NavigationEnd),\r\n      )\r\n        .subscribe(() => {\r\n          ga('send', {hitType: 'pageview', page: this.location.path()});\r\n        });\r\n    }\r\n  }\r\n\r\n  trackEvent(eventName: string) {\r\n    if (this.enabled) {\r\n      ga('send', 'event', eventName);\r\n    }\r\n  }\r\n}\r\n","import { Injector, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NbCardModule, NbCheckboxModule, NbLayoutModule } from '@nebular/theme';\nimport { NB_AUTH_FALLBACK_TOKEN, NbAuthService, NbAuthSimpleToken, NbAuthTokenParceler, NbTokenLocalStorage, NbTokenService, NbTokenStorage, } from './services';\nimport { NbDummyAuthStrategy, NbOAuth2AuthStrategy, NbPasswordAuthStrategy, } from './strategies';\nimport { defaultAuthOptions, NB_AUTH_INTERCEPTOR_HEADER, NB_AUTH_OPTIONS, NB_AUTH_STRATEGIES, NB_AUTH_TOKENS, NB_AUTH_USER_OPTIONS, } from './auth.options';\nimport { NbAuthComponent } from './components/auth.component';\nimport { NbAuthBlockComponent } from './components/auth-block/auth-block.component';\nimport { NbLoginComponent } from './components/login/login.component';\nimport { NbRegisterComponent } from './components/register/register.component';\nimport { NbLogoutComponent } from './components/logout/logout.component';\nimport { NbRequestPasswordComponent } from './components/request-password/request-password.component';\nimport { NbResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { routes } from './auth.routes';\nimport { deepExtend } from './helpers';\nexport function nbStrategiesFactory(options, injector) {\n    var strategies = [];\n    options.strategies\n        .forEach(function (_a) {\n        var strategyClass = _a[0], strategyOptions = _a[1];\n        var strategy = injector.get(strategyClass);\n        strategy.setOptions(strategyOptions);\n        strategies.push(strategy);\n    });\n    return strategies;\n}\nexport function nbTokensFactory(strategies) {\n    var tokens = [];\n    strategies\n        .forEach(function (strategy) {\n        tokens.push(strategy.getOption('token.class'));\n    });\n    return tokens;\n}\nexport function nbOptionsFactory(options) {\n    return deepExtend(defaultAuthOptions, options);\n}\nvar NbAuthModule = /** @class */ (function () {\n    function NbAuthModule() {\n    }\n    NbAuthModule.forRoot = function (nbAuthOptions) {\n        return {\n            ngModule: NbAuthModule,\n            providers: [\n                { provide: NB_AUTH_USER_OPTIONS, useValue: nbAuthOptions },\n                { provide: NB_AUTH_OPTIONS, useFactory: nbOptionsFactory, deps: [NB_AUTH_USER_OPTIONS] },\n                { provide: NB_AUTH_STRATEGIES, useFactory: nbStrategiesFactory, deps: [NB_AUTH_OPTIONS, Injector] },\n                { provide: NB_AUTH_TOKENS, useFactory: nbTokensFactory, deps: [NB_AUTH_STRATEGIES] },\n                { provide: NB_AUTH_FALLBACK_TOKEN, useValue: NbAuthSimpleToken },\n                { provide: NB_AUTH_INTERCEPTOR_HEADER, useValue: 'Authorization' },\n                { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n                NbAuthTokenParceler,\n                NbAuthService,\n                NbTokenService,\n                NbDummyAuthStrategy,\n                NbPasswordAuthStrategy,\n                NbOAuth2AuthStrategy,\n            ],\n        };\n    };\n    NbAuthModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        NbLayoutModule,\n                        NbCardModule,\n                        NbCheckboxModule,\n                        RouterModule.forChild(routes),\n                        FormsModule,\n                        HttpClientModule,\n                    ],\n                    declarations: [\n                        NbAuthComponent,\n                        NbAuthBlockComponent,\n                        NbLoginComponent,\n                        NbRegisterComponent,\n                        NbRequestPasswordComponent,\n                        NbResetPasswordComponent,\n                        NbLogoutComponent,\n                    ],\n                    exports: [\n                        NbAuthComponent,\n                        NbAuthBlockComponent,\n                        NbLoginComponent,\n                        NbRegisterComponent,\n                        NbRequestPasswordComponent,\n                        NbResetPasswordComponent,\n                        NbLogoutComponent,\n                    ],\n                },] },\n    ];\n    return NbAuthModule;\n}());\nexport { NbAuthModule };\n//# sourceMappingURL=auth.module.js.map","import { InjectionToken } from '@angular/core';\nvar socialLinks = [];\nexport var defaultAuthOptions = {\n    strategies: [],\n    forms: {\n        login: {\n            redirectDelay: 500,\n            // delay before redirect after a successful login, while success message is shown to the user\n            strategy: 'email',\n            // provider id key. If you have multiple strategies, or what to use your own\n            rememberMe: true,\n            // whether to show or not the `rememberMe` checkbox\n            showMessages: {\n                // show/not show success/error messages\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        register: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            terms: true,\n            socialLinks: socialLinks,\n        },\n        requestPassword: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        resetPassword: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        logout: {\n            redirectDelay: 500,\n            strategy: 'email',\n        },\n        validation: {\n            password: {\n                required: true,\n                minLength: 4,\n                maxLength: 50,\n            },\n            email: {\n                required: true,\n            },\n            fullName: {\n                required: false,\n                minLength: 4,\n                maxLength: 50,\n            },\n        },\n    },\n};\nexport var NB_AUTH_OPTIONS = new InjectionToken('Nebular Auth Options');\nexport var NB_AUTH_USER_OPTIONS = new InjectionToken('Nebular User Auth Options');\nexport var NB_AUTH_STRATEGIES = new InjectionToken('Nebular Auth Strategies');\nexport var NB_AUTH_TOKENS = new InjectionToken('Nebular Auth Tokens');\nexport var NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken('Nebular Simple Interceptor Header');\n//# sourceMappingURL=auth.options.js.map","import { NbAuthComponent } from './components/auth.component';\nimport { NbLoginComponent } from './components/login/login.component';\nimport { NbRegisterComponent } from './components/register/register.component';\nimport { NbLogoutComponent } from './components/logout/logout.component';\nimport { NbRequestPasswordComponent } from './components/request-password/request-password.component';\nimport { NbResetPasswordComponent } from './components/reset-password/reset-password.component';\nexport var routes = [\n    {\n        path: 'auth',\n        component: NbAuthComponent,\n        children: [\n            {\n                path: '',\n                component: NbLoginComponent,\n            },\n            {\n                path: 'login',\n                component: NbLoginComponent,\n            },\n            {\n                path: 'register',\n                component: NbRegisterComponent,\n            },\n            {\n                path: 'logout',\n                component: NbLogoutComponent,\n            },\n            {\n                path: 'request-password',\n                component: NbRequestPasswordComponent,\n            },\n            {\n                path: 'reset-password',\n                component: NbResetPasswordComponent,\n            },\n        ],\n    },\n];\n//# sourceMappingURL=auth.routes.js.map","import { Component } from '@angular/core';\nvar NbAuthBlockComponent = /** @class */ (function () {\n    function NbAuthBlockComponent() {\n    }\n    NbAuthBlockComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'nb-auth-block',\n                    styles: [\"@media (max-width: 550px){:host /deep/ .accept-group{font-size:12px;padding:0}}:host /deep/ form{width:100%}:host /deep/ .alert{text-align:center}:host /deep/ .title{margin-bottom:0.75rem;text-align:center}:host /deep/ .sub-title{margin-bottom:2rem;text-align:center}:host /deep/ .checkbox{display:flex;justify-content:space-between;margin-bottom:10px;font-weight:normal}:host /deep/ .form-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}:host /deep/ .form-group.accept-group .forgot-password{line-height:2}:host /deep/ .links{text-align:center;margin-top:1.75rem}:host /deep/ .links .socials{margin:1.5rem 0 2.5rem}:host /deep/ .links .socials a{margin:0 1rem;text-decoration:none;font-size:1rem;vertical-align:middle}:host /deep/ .links .socials a.with-icon{font-size:2rem} \"],\n                    template: \"\\n    <ng-content></ng-content>\\n  \",\n                },] },\n    ];\n    return NbAuthBlockComponent;\n}());\nexport { NbAuthBlockComponent };\n//# sourceMappingURL=auth-block.component.js.map","\n    <ng-content></ng-content>\n  ","import { Component } from '@angular/core';\nimport { NbAuthService } from '../services/auth.service';\nimport { takeWhile } from 'rxjs/operators';\nvar NbAuthComponent = /** @class */ (function () {\n    // showcase of how to use the onAuthenticationChange method\n    function NbAuthComponent(auth) {\n        var _this = this;\n        this.auth = auth;\n        this.alive = true;\n        this.authenticated = false;\n        this.token = '';\n        this.subscription = auth.onAuthenticationChange()\n            .pipe(takeWhile(function () { return _this.alive; }))\n            .subscribe(function (authenticated) {\n            _this.authenticated = authenticated;\n        });\n    }\n    NbAuthComponent.prototype.ngOnDestroy = function () {\n        this.alive = false;\n    };\n    NbAuthComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'nb-auth',\n                    styles: [\":host /deep/ nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}:host /deep/ nb-card{height:calc(100vh - 2 * 2.5rem)}:host /deep/ nb-card{margin:0}:host /deep/ .flex-centered{margin:auto}:host /deep/ nb-card-body{display:flex}@media (max-width: 550px){:host /deep/ /deep/ nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}:host /deep/ nb-card{border-radius:0;height:100vh}} \"],\n                    template: \"\\n    <nb-layout>\\n      <nb-layout-column>\\n        <nb-card>\\n          <nb-card-body>\\n            <div class=\\\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\\\">\\n              <router-outlet></router-outlet>\\n            </div>\\n          </nb-card-body>\\n        </nb-card>\\n      </nb-layout-column>\\n    </nb-layout>\\n  \",\n                },] },\n    ];\n    /** @nocollapse */\n    NbAuthComponent.ctorParameters = function () { return [\n        { type: NbAuthService, },\n    ]; };\n    return NbAuthComponent;\n}());\nexport { NbAuthComponent };\n//# sourceMappingURL=auth.component.js.map","\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-body>\n            <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n              <router-outlet></router-outlet>\n            </div>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  ","export * from './auth.component';\nexport * from './auth-block/auth-block.component';\nexport * from './login/login.component';\nexport * from './logout/logout.component';\nexport * from './register/register.component';\nexport * from './request-password/request-password.component';\nexport * from './reset-password/reset-password.component';\n//# sourceMappingURL=index.js.map","import { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NB_AUTH_OPTIONS } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\nimport { NbAuthService } from '../../services/auth.service';\nvar NbLoginComponent = /** @class */ (function () {\n    function NbLoginComponent(service, options, router) {\n        if (options === void 0) { options = {}; }\n        this.service = service;\n        this.options = options;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.submitted = false;\n        this.socialLinks = [];\n        this.redirectDelay = this.getConfigValue('forms.login.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.login.showMessages');\n        this.strategy = this.getConfigValue('forms.login.strategy');\n        this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n    }\n    NbLoginComponent.prototype.login = function () {\n        var _this = this;\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.authenticate(this.strategy, this.user).subscribe(function (result) {\n            _this.submitted = false;\n            if (result.isSuccess()) {\n                _this.messages = result.getMessages();\n            }\n            else {\n                _this.errors = result.getErrors();\n            }\n            var redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(function () {\n                    return _this.router.navigateByUrl(redirect);\n                }, _this.redirectDelay);\n            }\n        });\n    };\n    NbLoginComponent.prototype.getConfigValue = function (key) {\n        return getDeepFromObject(this.options, key, null);\n    };\n    NbLoginComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'nb-login',\n                    template: \"\\n    <nb-auth-block>\\n      <h2 class=\\\"title\\\">Login</h2>\\n\\n <form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" autocomplete=\\\"nope\\\">\\n\\n        <div *ngIf=\\\"showMessages.error && errors && errors.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          <div><strong>Oh snap!</strong></div>\\n          <div *ngFor=\\\"let error of errors\\\">{{ error }}</div>\\n        </div>\\n\\n        <div *ngIf=\\\"showMessages.success && messages && messages.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          <div><strong>Hooray!</strong></div>\\n          <div *ngFor=\\\"let message of messages\\\">{{ message }}</div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-email\\\" class=\\\"sr-only\\\">Email</label>\\n          <input name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" id=\\\"input-email\\\" pattern=\\\".+@.+..+\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Email\\\" #email=\\\"ngModel\\\"\\n                 [class.form-control-danger]=\\\"email.invalid && email.touched\\\" autofocus\\n                 [required]=\\\"getConfigValue('forms.validation.email.required')\\\">\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"email.invalid && email.touched && email.errors?.required\\\">\\n            Email es requerido!\\n          </small>\\n          <small class=\\\"form-text error\\\"\\n                 *ngIf=\\\"email.invalid && email.touched && email.errors?.pattern\\\">\\n            Ingresa un email real!\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-password\\\" class=\\\"sr-only\\\">Password</label>\\n          <input name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" id=\\\"input-password\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password=\\\"ngModel\\\"\\n                 [class.form-control-danger]=\\\"password.invalid && password.touched\\\"\\n                 [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n                 [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n                 [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\">\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"password.invalid && password.touched && password.errors?.required\\\">\\n            El password es requerido!\\n          </small>\\n          <small\\n            class=\\\"form-text error\\\"\\n            *ngIf=\\\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\\\">\\n            El password debe contener\\n            from {{ getConfigValue('forms.validation.password.minLength') }}\\n            to {{ getConfigValue('forms.validation.password.maxLength') }}\\n            caracteres\\n          </small>\\n        </div>\\n\\n       <button [disabled]=\\\"submitted || !form.valid\\\" class=\\\"btn btn-block btn-hero-success\\\"\\n                [class.btn-pulse]=\\\"submitted\\\">\\n          Ingresar\\n        </button>\\n      </form>\\n\\n      <div class=\\\"links\\\">\\n\\n        <ng-container *ngIf=\\\"socialLinks && socialLinks.length > 0\\\">\\n          </ng-container>\\n\\n      </div>\\n    </nb-auth-block>\\n  \",\n                },] },\n    ];\n    /** @nocollapse */\n    NbLoginComponent.ctorParameters = function () { return [\n        { type: NbAuthService, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_OPTIONS,] },] },\n        { type: Router, },\n    ]; };\n    return NbLoginComponent;\n}());\nexport { NbLoginComponent };\n//# sourceMappingURL=login.component.js.map","\n    <nb-auth-block>\n      <h2 class=\"title\">Sign In</h2>\n      <small class=\"form-text sub-title\">Hello! Sign in with your username or email</small>\n\n      <form (ngSubmit)=\"login()\" #form=\"ngForm\" autocomplete=\"nope\">\n\n        <div *ngIf=\"showMessages.error && errors && errors.length > 0 && !submitted\"\n             class=\"alert alert-danger\" role=\"alert\">\n          <div><strong>Oh snap!</strong></div>\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\n        </div>\n\n        <div *ngIf=\"showMessages.success && messages && messages.length > 0 && !submitted\"\n             class=\"alert alert-success\" role=\"alert\">\n          <div><strong>Hooray!</strong></div>\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-email\" class=\"sr-only\">Email address</label>\n          <input name=\"email\" [(ngModel)]=\"user.email\" id=\"input-email\" pattern=\".+@.+..+\"\n                 class=\"form-control\" placeholder=\"Email address\" #email=\"ngModel\"\n                 [class.form-control-danger]=\"email.invalid && email.touched\" autofocus\n                 [required]=\"getConfigValue('forms.validation.email.required')\">\n          <small class=\"form-text error\" *ngIf=\"email.invalid && email.touched && email.errors?.required\">\n            Email is required!\n          </small>\n          <small class=\"form-text error\"\n                 *ngIf=\"email.invalid && email.touched && email.errors?.pattern\">\n            Email should be the real one!\n          </small>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-password\" class=\"sr-only\">Password</label>\n          <input name=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"input-password\"\n                 class=\"form-control\" placeholder=\"Password\" #password=\"ngModel\"\n                 [class.form-control-danger]=\"password.invalid && password.touched\"\n                 [required]=\"getConfigValue('forms.validation.password.required')\"\n                 [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\n                 [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\">\n          <small class=\"form-text error\" *ngIf=\"password.invalid && password.touched && password.errors?.required\">\n            Password is required!\n          </small>\n          <small\n            class=\"form-text error\"\n            *ngIf=\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\">\n            Password should contains\n            from {{ getConfigValue('forms.validation.password.minLength') }}\n            to {{ getConfigValue('forms.validation.password.maxLength') }}\n            characters\n          </small>\n        </div>\n\n        <div class=\"form-group accept-group col-sm-12\">\n          <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\">Remember me</nb-checkbox>\n          <a class=\"forgot-password\" routerLink=\"../request-password\">Forgot Password?</a>\n        </div>\n\n        <button [disabled]=\"submitted || !form.valid\" class=\"btn btn-block btn-hero-success\"\n                [class.btn-pulse]=\"submitted\">\n          Sign In\n        </button>\n      </form>\n\n      <div class=\"links\">\n\n        <ng-container *ngIf=\"socialLinks && socialLinks.length > 0\">\n          <small class=\"form-text\">Or connect with:</small>\n\n          <div class=\"socials\">\n            <ng-container *ngFor=\"let socialLink of socialLinks\">\n              <a *ngIf=\"socialLink.link\"\n                 [routerLink]=\"socialLink.link\"\n                 [attr.target]=\"socialLink.target\"\n                 [attr.class]=\"socialLink.icon\"\n                 [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\n              <a *ngIf=\"socialLink.url\"\n                 [attr.href]=\"socialLink.url\"\n                 [attr.target]=\"socialLink.target\"\n                 [attr.class]=\"socialLink.icon\"\n                 [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\n            </ng-container>\n          </div>\n        </ng-container>\n\n        <small class=\"form-text\">\n          Don't have an account? <a routerLink=\"../register\"><strong>Sign Up</strong></a>\n        </small>\n      </div>\n    </nb-auth-block>\n  ","import { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NB_AUTH_OPTIONS } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\nimport { NbAuthService } from '../../services/auth.service';\nvar NbLogoutComponent = /** @class */ (function () {\n    function NbLogoutComponent(service, options, router) {\n        if (options === void 0) { options = {}; }\n        this.service = service;\n        this.options = options;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.strategy = '';\n        this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n        this.strategy = this.getConfigValue('forms.logout.strategy');\n    }\n    NbLogoutComponent.prototype.ngOnInit = function () {\n        this.logout(this.strategy);\n    };\n    NbLogoutComponent.prototype.logout = function (strategy) {\n        var _this = this;\n        this.service.logout(strategy).subscribe(function (result) {\n            var redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(function () {\n                    return _this.router.navigateByUrl(redirect);\n                }, _this.redirectDelay);\n            }\n        });\n    };\n    NbLogoutComponent.prototype.getConfigValue = function (key) {\n        return getDeepFromObject(this.options, key, null);\n    };\n    NbLogoutComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'nb-logout',\n                    template: \"\\n    <div>Logging out, please wait...</div>\\n  \",\n                },] },\n    ];\n    /** @nocollapse */\n    NbLogoutComponent.ctorParameters = function () { return [\n        { type: NbAuthService, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_OPTIONS,] },] },\n        { type: Router, },\n    ]; };\n    return NbLogoutComponent;\n}());\nexport { NbLogoutComponent };\n//# sourceMappingURL=logout.component.js.map","\n    <div>Logging out, please wait...</div>\n  ","import { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NB_AUTH_OPTIONS } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\nimport { NbAuthService } from '../../services/auth.service';\nvar NbRegisterComponent = /** @class */ (function () {\n    function NbRegisterComponent(service, options, router) {\n        if (options === void 0) { options = {}; }\n        this.service = service;\n        this.options = options;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.socialLinks = [];\n        this.redirectDelay = this.getConfigValue('forms.register.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.register.showMessages');\n        this.strategy = this.getConfigValue('forms.register.strategy');\n        this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n    }\n    NbRegisterComponent.prototype.register = function () {\n        var _this = this;\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.register(this.strategy, this.user).subscribe(function (result) {\n            _this.submitted = false;\n            if (result.isSuccess()) {\n                _this.messages = result.getMessages();\n            }\n            else {\n                _this.errors = result.getErrors();\n            }\n            var redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(function () {\n                    return _this.router.navigateByUrl(redirect);\n                }, _this.redirectDelay);\n            }\n        });\n    };\n    NbRegisterComponent.prototype.getConfigValue = function (key) {\n        return getDeepFromObject(this.options, key, null);\n    };\n    NbRegisterComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'nb-register',\n                    styles: [\":host .title{margin-bottom:2rem} \"],\n                    template: \"\\n    <nb-auth-block>\\n      <h2 class=\\\"title\\\">Sign Up</h2>\\n      <form (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\">\\n\\n        <div *ngIf=\\\"showMessages.error && errors && errors.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          <div><strong>Oh snap!</strong></div>\\n          <div *ngFor=\\\"let error of errors\\\">{{ error }}</div>\\n        </div>\\n        <div *ngIf=\\\"showMessages.success && messages && messages.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          <div><strong>Hooray!</strong></div>\\n          <div *ngFor=\\\"let message of messages\\\">{{ message }}</div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-name\\\" class=\\\"sr-only\\\">Full name</label>\\n          <input name=\\\"fullName\\\" [(ngModel)]=\\\"user.fullName\\\" id=\\\"input-name\\\" #fullName=\\\"ngModel\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Full name\\\"\\n                 [class.form-control-danger]=\\\"fullName.invalid && fullName.touched\\\"\\n                 [required]=\\\"getConfigValue('forms.validation.fullName.required')\\\"\\n                 [minlength]=\\\"getConfigValue('forms.validation.fullName.minLength')\\\"\\n                 [maxlength]=\\\"getConfigValue('forms.validation.fullName.maxLength')\\\"\\n                 autofocus>\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"fullName.invalid && fullName.touched && fullName.errors?.required\\\">\\n            Full name is required!\\n          </small>\\n          <small\\n            class=\\\"form-text error\\\"\\n            *ngIf=\\\"fullName.invalid && fullName.touched && (fullName.errors?.minlength || fullName.errors?.maxlength)\\\">\\n            Full name should contains\\n            from {{getConfigValue('forms.validation.fullName.minLength')}}\\n            to {{getConfigValue('forms.validation.fullName.maxLength')}}\\n            characters\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-email\\\" class=\\\"sr-only\\\">Email address</label>\\n          <input name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" id=\\\"input-email\\\" #email=\\\"ngModel\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Email address\\\" pattern=\\\".+@.+..+\\\"\\n                 [class.form-control-danger]=\\\"email.invalid && email.touched\\\"\\n                 [required]=\\\"getConfigValue('forms.validation.email.required')\\\">\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"email.invalid && email.touched && email.errors?.required\\\">\\n            Email is required!\\n          </small>\\n          <small class=\\\"form-text error\\\"\\n                 *ngIf=\\\"email.invalid && email.touched && email.errors?.pattern\\\">\\n            Email should be the real one!\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-password\\\" class=\\\"sr-only\\\">Password</label>\\n          <input name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" id=\\\"input-password\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password=\\\"ngModel\\\"\\n                 [class.form-control-danger]=\\\"password.invalid && password.touched\\\"\\n                 [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n                 [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n                 [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\">\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"password.invalid && password.touched && password.errors?.required\\\">\\n            Password is required!\\n          </small>\\n          <small\\n            class=\\\"form-text error\\\"\\n            *ngIf=\\\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\\\">\\n            Password should contains\\n            from {{ getConfigValue('forms.validation.password.minLength') }}\\n            to {{ getConfigValue('forms.validation.password.maxLength') }}\\n            characters\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-re-password\\\" class=\\\"sr-only\\\">Repeat password</label>\\n          <input\\n            name=\\\"rePass\\\" [(ngModel)]=\\\"user.confirmPassword\\\" type=\\\"password\\\" id=\\\"input-re-password\\\"\\n            class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" #rePass=\\\"ngModel\\\"\\n            [class.form-control-danger]=\\\"(rePass.invalid || password.value != rePass.value) && rePass.touched\\\"\\n            [required]=\\\"getConfigValue('forms.validation.password.required')\\\">\\n          <small class=\\\"form-text error\\\"\\n                 *ngIf=\\\"rePass.invalid && rePass.touched && rePass.errors?.required\\\">\\n            Password confirmation is required!\\n          </small>\\n          <small\\n            class=\\\"form-text error\\\"\\n            *ngIf=\\\"rePass.touched && password.value != rePass.value && !rePass.errors?.required\\\">\\n            Password does not match the confirm password.\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group accept-group col-sm-12\\\" *ngIf=\\\"getConfigValue('forms.register.terms')\\\">\\n          <nb-checkbox name=\\\"terms\\\" [(ngModel)]=\\\"user.terms\\\" [required]=\\\"getConfigValue('forms.register.terms')\\\">\\n            Agree to <a href=\\\"#\\\" target=\\\"_blank\\\"><strong>Terms & Conditions</strong></a>\\n          </nb-checkbox>\\n        </div>\\n\\n        <button [disabled]=\\\"submitted || !form.valid\\\" class=\\\"btn btn-block btn-hero-success\\\"\\n                [class.btn-pulse]=\\\"submitted\\\">\\n          Register\\n        </button>\\n      </form>\\n\\n      <div class=\\\"links\\\">\\n\\n        <ng-container *ngIf=\\\"socialLinks && socialLinks.length > 0\\\">\\n          <small class=\\\"form-text\\\">Or connect with:</small>\\n\\n          <div class=\\\"socials\\\">\\n            <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n              <a *ngIf=\\\"socialLink.link\\\"\\n                 [routerLink]=\\\"socialLink.link\\\"\\n                 [attr.target]=\\\"socialLink.target\\\"\\n                 [attr.class]=\\\"socialLink.icon\\\"\\n                 [class.with-icon]=\\\"socialLink.icon\\\">{{ socialLink.title }}</a>\\n              <a *ngIf=\\\"socialLink.url\\\"\\n                 [attr.href]=\\\"socialLink.url\\\"\\n                 [attr.target]=\\\"socialLink.target\\\"\\n                 [attr.class]=\\\"socialLink.icon\\\"\\n                 [class.with-icon]=\\\"socialLink.icon\\\">{{ socialLink.title }}</a>\\n            </ng-container>\\n          </div>\\n        </ng-container>\\n\\n        <small class=\\\"form-text\\\">\\n          Already have an account? <a routerLink=\\\"../login\\\"><strong>Sign in</strong></a>\\n        </small>\\n      </div>\\n    </nb-auth-block>\\n  \",\n                },] },\n    ];\n    /** @nocollapse */\n    NbRegisterComponent.ctorParameters = function () { return [\n        { type: NbAuthService, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_OPTIONS,] },] },\n        { type: Router, },\n    ]; };\n    return NbRegisterComponent;\n}());\nexport { NbRegisterComponent };\n//# sourceMappingURL=register.component.js.map","\n    <nb-auth-block>\n      <h2 class=\"title\">Sign Up</h2>\n      <form (ngSubmit)=\"register()\" #form=\"ngForm\">\n\n        <div *ngIf=\"showMessages.error && errors && errors.length > 0 && !submitted\"\n             class=\"alert alert-danger\" role=\"alert\">\n          <div><strong>Oh snap!</strong></div>\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\n        </div>\n        <div *ngIf=\"showMessages.success && messages && messages.length > 0 && !submitted\"\n             class=\"alert alert-success\" role=\"alert\">\n          <div><strong>Hooray!</strong></div>\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-name\" class=\"sr-only\">Full name</label>\n          <input name=\"fullName\" [(ngModel)]=\"user.fullName\" id=\"input-name\" #fullName=\"ngModel\"\n                 class=\"form-control\" placeholder=\"Full name\"\n                 [class.form-control-danger]=\"fullName.invalid && fullName.touched\"\n                 [required]=\"getConfigValue('forms.validation.fullName.required')\"\n                 [minlength]=\"getConfigValue('forms.validation.fullName.minLength')\"\n                 [maxlength]=\"getConfigValue('forms.validation.fullName.maxLength')\"\n                 autofocus>\n          <small class=\"form-text error\" *ngIf=\"fullName.invalid && fullName.touched && fullName.errors?.required\">\n            Full name is required!\n          </small>\n          <small\n            class=\"form-text error\"\n            *ngIf=\"fullName.invalid && fullName.touched && (fullName.errors?.minlength || fullName.errors?.maxlength)\">\n            Full name should contains\n            from {{getConfigValue('forms.validation.fullName.minLength')}}\n            to {{getConfigValue('forms.validation.fullName.maxLength')}}\n            characters\n          </small>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-email\" class=\"sr-only\">Email address</label>\n          <input name=\"email\" [(ngModel)]=\"user.email\" id=\"input-email\" #email=\"ngModel\"\n                 class=\"form-control\" placeholder=\"Email address\" pattern=\".+@.+..+\"\n                 [class.form-control-danger]=\"email.invalid && email.touched\"\n                 [required]=\"getConfigValue('forms.validation.email.required')\">\n          <small class=\"form-text error\" *ngIf=\"email.invalid && email.touched && email.errors?.required\">\n            Email is required!\n          </small>\n          <small class=\"form-text error\"\n                 *ngIf=\"email.invalid && email.touched && email.errors?.pattern\">\n            Email should be the real one!\n          </small>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-password\" class=\"sr-only\">Password</label>\n          <input name=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"input-password\"\n                 class=\"form-control\" placeholder=\"Password\" #password=\"ngModel\"\n                 [class.form-control-danger]=\"password.invalid && password.touched\"\n                 [required]=\"getConfigValue('forms.validation.password.required')\"\n                 [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\n                 [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\">\n          <small class=\"form-text error\" *ngIf=\"password.invalid && password.touched && password.errors?.required\">\n            Password is required!\n          </small>\n          <small\n            class=\"form-text error\"\n            *ngIf=\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\">\n            Password should contains\n            from {{ getConfigValue('forms.validation.password.minLength') }}\n            to {{ getConfigValue('forms.validation.password.maxLength') }}\n            characters\n          </small>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-re-password\" class=\"sr-only\">Repeat password</label>\n          <input\n            name=\"rePass\" [(ngModel)]=\"user.confirmPassword\" type=\"password\" id=\"input-re-password\"\n            class=\"form-control\" placeholder=\"Confirm Password\" #rePass=\"ngModel\"\n            [class.form-control-danger]=\"(rePass.invalid || password.value != rePass.value) && rePass.touched\"\n            [required]=\"getConfigValue('forms.validation.password.required')\">\n          <small class=\"form-text error\"\n                 *ngIf=\"rePass.invalid && rePass.touched && rePass.errors?.required\">\n            Password confirmation is required!\n          </small>\n          <small\n            class=\"form-text error\"\n            *ngIf=\"rePass.touched && password.value != rePass.value && !rePass.errors?.required\">\n            Password does not match the confirm password.\n          </small>\n        </div>\n\n        <div class=\"form-group accept-group col-sm-12\" *ngIf=\"getConfigValue('forms.register.terms')\">\n          <nb-checkbox name=\"terms\" [(ngModel)]=\"user.terms\" [required]=\"getConfigValue('forms.register.terms')\">\n            Agree to <a href=\"#\" target=\"_blank\"><strong>Terms & Conditions</strong></a>\n          </nb-checkbox>\n        </div>\n\n        <button [disabled]=\"submitted || !form.valid\" class=\"btn btn-block btn-hero-success\"\n                [class.btn-pulse]=\"submitted\">\n          Register\n        </button>\n      </form>\n\n      <div class=\"links\">\n\n        <ng-container *ngIf=\"socialLinks && socialLinks.length > 0\">\n          <small class=\"form-text\">Or connect with:</small>\n\n          <div class=\"socials\">\n            <ng-container *ngFor=\"let socialLink of socialLinks\">\n              <a *ngIf=\"socialLink.link\"\n                 [routerLink]=\"socialLink.link\"\n                 [attr.target]=\"socialLink.target\"\n                 [attr.class]=\"socialLink.icon\"\n                 [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\n              <a *ngIf=\"socialLink.url\"\n                 [attr.href]=\"socialLink.url\"\n                 [attr.target]=\"socialLink.target\"\n                 [attr.class]=\"socialLink.icon\"\n                 [class.with-icon]=\"socialLink.icon\">{{ socialLink.title }}</a>\n            </ng-container>\n          </div>\n        </ng-container>\n\n        <small class=\"form-text\">\n          Already have an account? <a routerLink=\"../login\"><strong>Sign in</strong></a>\n        </small>\n      </div>\n    </nb-auth-block>\n  ","import { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NB_AUTH_OPTIONS } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\nimport { NbAuthService } from '../../services/auth.service';\nvar NbRequestPasswordComponent = /** @class */ (function () {\n    function NbRequestPasswordComponent(service, options, router) {\n        if (options === void 0) { options = {}; }\n        this.service = service;\n        this.options = options;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.redirectDelay = this.getConfigValue('forms.requestPassword.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.requestPassword.showMessages');\n        this.strategy = this.getConfigValue('forms.requestPassword.strategy');\n    }\n    NbRequestPasswordComponent.prototype.requestPass = function () {\n        var _this = this;\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.requestPassword(this.strategy, this.user).subscribe(function (result) {\n            _this.submitted = false;\n            if (result.isSuccess()) {\n                _this.messages = result.getMessages();\n            }\n            else {\n                _this.errors = result.getErrors();\n            }\n            var redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(function () {\n                    return _this.router.navigateByUrl(redirect);\n                }, _this.redirectDelay);\n            }\n        });\n    };\n    NbRequestPasswordComponent.prototype.getConfigValue = function (key) {\n        return getDeepFromObject(this.options, key, null);\n    };\n    NbRequestPasswordComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'nb-request-password-page',\n                    styles: [\":host .links{display:flex;justify-content:space-between}:host .form-group:last-of-type{margin-bottom:3rem} \"],\n                    template: \"\\n    <nb-auth-block>\\n      <h2 class=\\\"title\\\">Recuperar contraseña</h2>\\n      <small class=\\\"form-text sub-title\\\">Un email con un link de recuperación sera enviado a su correo</small>\\n      <form (ngSubmit)=\\\"requestPass()\\\" #requestPassForm=\\\"ngForm\\\">\\n\\n        <div *ngIf=\\\"showMessages.error && errors && errors.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          <div><strong>Oh snap!</strong></div>\\n          <div *ngFor=\\\"let error of errors\\\">{{ error }}</div>\\n        </div>\\n        <div *ngIf=\\\"showMessages.success && messages && messages.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          <div><strong>Hooray!</strong></div>\\n          <div *ngFor=\\\"let message of messages\\\">{{ message }}</div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-email\\\" class=\\\"sr-only\\\">Ingresa tu email</label>\\n          <input name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" id=\\\"input-email\\\" #email=\\\"ngModel\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Email \\\" pattern=\\\".+@.+..+\\\"\\n                 [class.form-control-danger]=\\\"email.invalid && email.touched\\\"\\n                 [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n                 autofocus>\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"email.invalid && email.touched && email.errors?.required\\\">\\n            El email es requerido!\\n          </small>\\n          <small class=\\\"form-text error\\\"\\n                 *ngIf=\\\"email.invalid && email.touched && email.errors?.pattern\\\">\\n            Email ingresado es invalido!\\n          </small>\\n        </div>\\n\\n        <button [disabled]=\\\"submitted || !requestPassForm.form.valid\\\" class=\\\"btn btn-hero-success btn-block\\\"\\n                [class.btn-pulse]=\\\"submitted\\\">\\n          Recuperar contraseña\\n        </button>\\n      </form>\\n\\n     </nb-auth-block>\\n  \",\n                },] },\n    ];\n    /** @nocollapse */\n    NbRequestPasswordComponent.ctorParameters = function () { return [\n        { type: NbAuthService, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_OPTIONS,] },] },\n        { type: Router, },\n    ]; };\n    return NbRequestPasswordComponent;\n}());\nexport { NbRequestPasswordComponent };\n//# sourceMappingURL=request-password.component.js.map","\n    <nb-auth-block>\n      <h2 class=\"title\">Forgot Password</h2>\n      <small class=\"form-text sub-title\">Enter your email adress and we’ll send a link to reset your password</small>\n      <form (ngSubmit)=\"requestPass()\" #requestPassForm=\"ngForm\">\n\n        <div *ngIf=\"showMessages.error && errors && errors.length > 0 && !submitted\"\n             class=\"alert alert-danger\" role=\"alert\">\n          <div><strong>Oh snap!</strong></div>\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\n        </div>\n        <div *ngIf=\"showMessages.success && messages && messages.length > 0 && !submitted\"\n             class=\"alert alert-success\" role=\"alert\">\n          <div><strong>Hooray!</strong></div>\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-email\" class=\"sr-only\">Enter your email address</label>\n          <input name=\"email\" [(ngModel)]=\"user.email\" id=\"input-email\" #email=\"ngModel\"\n                 class=\"form-control\" placeholder=\"Email address\" pattern=\".+@.+..+\"\n                 [class.form-control-danger]=\"email.invalid && email.touched\"\n                 [required]=\"getConfigValue('forms.validation.email.required')\"\n                 autofocus>\n          <small class=\"form-text error\" *ngIf=\"email.invalid && email.touched && email.errors?.required\">\n            Email is required!\n          </small>\n          <small class=\"form-text error\"\n                 *ngIf=\"email.invalid && email.touched && email.errors?.pattern\">\n            Email should be the real one!\n          </small>\n        </div>\n\n        <button [disabled]=\"submitted || !requestPassForm.form.valid\" class=\"btn btn-hero-success btn-block\"\n                [class.btn-pulse]=\"submitted\">\n          Request password\n        </button>\n      </form>\n\n      <div class=\"links col-sm-12\">\n        <small class=\"form-text\">\n          Already have an account? <a routerLink=\"../login\"><strong>Sign In</strong></a>\n        </small>\n        <small class=\"form-text\">\n          <a routerLink=\"../register\"><strong>Sign Up</strong></a>\n        </small>\n      </div>\n    </nb-auth-block>\n  ","import { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NB_AUTH_OPTIONS } from '../../auth.options';\nimport { getDeepFromObject } from '../../helpers';\nimport { NbAuthService } from '../../services/auth.service';\nvar NbResetPasswordComponent = /** @class */ (function () {\n    function NbResetPasswordComponent(service, options, router) {\n        if (options === void 0) { options = {}; }\n        this.service = service;\n        this.options = options;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.redirectDelay = this.getConfigValue('forms.resetPassword.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.resetPassword.showMessages');\n        this.strategy = this.getConfigValue('forms.resetPassword.strategy');\n    }\n    NbResetPasswordComponent.prototype.resetPass = function () {\n        var _this = this;\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.resetPassword(this.strategy, this.user).subscribe(function (result) {\n            _this.submitted = false;\n            if (result.isSuccess()) {\n                _this.messages = result.getMessages();\n            }\n            else {\n                _this.errors = result.getErrors();\n            }\n            var redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(function () {\n                    return _this.router.navigateByUrl(redirect);\n                }, _this.redirectDelay);\n            }\n        });\n    };\n    NbResetPasswordComponent.prototype.getConfigValue = function (key) {\n        return getDeepFromObject(this.options, key, null);\n    };\n    NbResetPasswordComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'nb-reset-password-page',\n                    styles: [\":host .links{display:flex;justify-content:space-between}:host .form-group:last-of-type{margin-bottom:3rem} \"],\n                    template: \"\\n    <nb-auth-block>\\n      <h2 class=\\\"title\\\">Change password</h2>\\n      <small class=\\\"form-text sub-title\\\">Please enter a new password</small>\\n      <form (ngSubmit)=\\\"resetPass()\\\" #resetPassForm=\\\"ngForm\\\">\\n\\n        <div *ngIf=\\\"errors && errors.length > 0 && !submitted\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          <div><strong>Oh snap!</strong></div>\\n          <div *ngFor=\\\"let error of errors\\\">{{ error }}</div>\\n        </div>\\n        <div *ngIf=\\\"messages && messages.length > 0 && !submitted\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          <div><strong>Hooray!</strong></div>\\n          <div *ngFor=\\\"let message of messages\\\">{{ message }}</div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-password\\\" class=\\\"sr-only\\\">New Password</label>\\n          <input name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" id=\\\"input-password\\\"\\n                 class=\\\"form-control form-control-lg first\\\" placeholder=\\\"New Password\\\" #password=\\\"ngModel\\\"\\n                 [class.form-control-danger]=\\\"password.invalid && password.touched\\\"\\n                 [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n                 [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n                 [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n                 autofocus>\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"password.invalid && password.touched && password.errors?.required\\\">\\n            Password is required!\\n          </small>\\n          <small\\n            class=\\\"form-text error\\\"\\n            *ngIf=\\\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\\\">\\n            Password should contains\\n            from {{getConfigValue('forms.validation.password.minLength')}}\\n            to {{getConfigValue('forms.validation.password.maxLength')}}\\n            characters\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-re-password\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n          <input\\n            name=\\\"rePass\\\" [(ngModel)]=\\\"user.confirmPassword\\\" type=\\\"password\\\" id=\\\"input-re-password\\\"\\n            class=\\\"form-control form-control-lg last\\\" placeholder=\\\"Confirm Password\\\" #rePass=\\\"ngModel\\\"\\n            [class.form-control-danger]=\\\"(rePass.invalid || password.value != rePass.value) && rePass.touched\\\"\\n            [required]=\\\"getConfigValue('forms.validation.password.required')\\\">\\n          <small class=\\\"form-text error\\\"\\n                 *ngIf=\\\"rePass.invalid && rePass.touched && rePass.errors?.required\\\">\\n            Password confirmation is required!\\n          </small>\\n          <small\\n            class=\\\"form-text error\\\"\\n            *ngIf=\\\"rePass.touched && password.value != rePass.value && !rePass.errors?.required\\\">\\n            Password does not match the confirm password.\\n          </small>\\n        </div>\\n\\n        <button [disabled]=\\\"submitted || !resetPassForm.form.valid\\\" class=\\\"btn btn-hero-success btn-block\\\"\\n                [class.btn-pulse]=\\\"submitted\\\">\\n          Change password\\n        </button>\\n      </form>\\n\\n      <div class=\\\"links col-sm-12\\\">\\n        <small class=\\\"form-text\\\">\\n          Already have an account? <a routerLink=\\\"../login\\\"><strong>Sign In</strong></a>\\n        </small>\\n        <small class=\\\"form-text\\\">\\n          <a routerLink=\\\"../register\\\"><strong>Sign Up</strong></a>\\n        </small>\\n      </div>\\n    </nb-auth-block>\\n  \",\n                },] },\n    ];\n    /** @nocollapse */\n    NbResetPasswordComponent.ctorParameters = function () { return [\n        { type: NbAuthService, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_OPTIONS,] },] },\n        { type: Router, },\n    ]; };\n    return NbResetPasswordComponent;\n}());\nexport { NbResetPasswordComponent };\n//# sourceMappingURL=reset-password.component.js.map","\n    <nb-auth-block>\n      <h2 class=\"title\">Change password</h2>\n      <small class=\"form-text sub-title\">Please enter a new password</small>\n      <form (ngSubmit)=\"resetPass()\" #resetPassForm=\"ngForm\">\n\n        <div *ngIf=\"errors && errors.length > 0 && !submitted\" class=\"alert alert-danger\" role=\"alert\">\n          <div><strong>Oh snap!</strong></div>\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\n        </div>\n        <div *ngIf=\"messages && messages.length > 0 && !submitted\" class=\"alert alert-success\" role=\"alert\">\n          <div><strong>Hooray!</strong></div>\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-password\" class=\"sr-only\">New Password</label>\n          <input name=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"input-password\"\n                 class=\"form-control form-control-lg first\" placeholder=\"New Password\" #password=\"ngModel\"\n                 [class.form-control-danger]=\"password.invalid && password.touched\"\n                 [required]=\"getConfigValue('forms.validation.password.required')\"\n                 [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\n                 [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\n                 autofocus>\n          <small class=\"form-text error\" *ngIf=\"password.invalid && password.touched && password.errors?.required\">\n            Password is required!\n          </small>\n          <small\n            class=\"form-text error\"\n            *ngIf=\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\">\n            Password should contains\n            from {{getConfigValue('forms.validation.password.minLength')}}\n            to {{getConfigValue('forms.validation.password.maxLength')}}\n            characters\n          </small>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"input-re-password\" class=\"sr-only\">Confirm Password</label>\n          <input\n            name=\"rePass\" [(ngModel)]=\"user.confirmPassword\" type=\"password\" id=\"input-re-password\"\n            class=\"form-control form-control-lg last\" placeholder=\"Confirm Password\" #rePass=\"ngModel\"\n            [class.form-control-danger]=\"(rePass.invalid || password.value != rePass.value) && rePass.touched\"\n            [required]=\"getConfigValue('forms.validation.password.required')\">\n          <small class=\"form-text error\"\n                 *ngIf=\"rePass.invalid && rePass.touched && rePass.errors?.required\">\n            Password confirmation is required!\n          </small>\n          <small\n            class=\"form-text error\"\n            *ngIf=\"rePass.touched && password.value != rePass.value && !rePass.errors?.required\">\n            Password does not match the confirm password.\n          </small>\n        </div>\n\n        <button [disabled]=\"submitted || !resetPassForm.form.valid\" class=\"btn btn-hero-success btn-block\"\n                [class.btn-pulse]=\"submitted\">\n          Change password\n        </button>\n      </form>\n\n      <div class=\"links col-sm-12\">\n        <small class=\"form-text\">\n          Already have an account? <a routerLink=\"../login\"><strong>Sign In</strong></a>\n        </small>\n        <small class=\"form-text\">\n          <a routerLink=\"../register\"><strong>Sign Up</strong></a>\n        </small>\n      </div>\n    </nb-auth-block>\n  ","/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nexport var deepExtend = function () {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n        return false;\n    }\n    if (arguments.length < 2) {\n        return arguments[0];\n    }\n    var target = arguments[0];\n    // convert arguments to array and cut off target object\n    var args = Array.prototype.slice.call(arguments, 1);\n    var val, src;\n    args.forEach(function (obj) {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach(function (key) {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                         * if new value isn't object then just overwrite by new value\n                         * instead of extending.\n                         */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = deepCloneArray(val);\n                return;\n                // custom cloning and overwrite for specific objects\n            }\n            else if (isSpecificValue(val)) {\n                target[key] = cloneSpecificValue(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nfunction isSpecificValue(val) {\n    return (val instanceof Date\n        || val instanceof RegExp) ? true : false;\n}\nfunction cloneSpecificValue(val) {\n    if (val instanceof Date) {\n        return new Date(val.getTime());\n    }\n    else if (val instanceof RegExp) {\n        return new RegExp(val);\n    }\n    else {\n        throw new Error('cloneSpecificValue: Unexpected situation');\n    }\n}\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n    var clone = [];\n    arr.forEach(function (item, index) {\n        if (typeof item === 'object' && item !== null) {\n            if (Array.isArray(item)) {\n                clone[index] = deepCloneArray(item);\n            }\n            else if (isSpecificValue(item)) {\n                clone[index] = cloneSpecificValue(item);\n            }\n            else {\n                clone[index] = deepExtend({}, item);\n            }\n        }\n        else {\n            clone[index] = item;\n        }\n    });\n    return clone;\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nexport function getDeepFromObject(object, name, defaultValue) {\n    if (object === void 0) { object = {}; }\n    var keys = name.split('.');\n    // clone the object\n    var level = deepExtend({}, object || {});\n    keys.forEach(function (k) {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n        else {\n            level = undefined;\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n}\nexport function urlBase64Decode(str) {\n    var output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n        case 0: {\n            break;\n        }\n        case 2: {\n            output += '==';\n            break;\n        }\n        case 3: {\n            output += '=';\n            break;\n        }\n        default: {\n            throw new Error('Illegal base64url string!');\n        }\n    }\n    return b64DecodeUnicode(output);\n}\nexport function b64decode(str) {\n    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = '';\n    str = String(str).replace(/=+$/, '');\n    if (str.length % 4 === 1) {\n        throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n    // initialize result and counters\n    var bc = 0, bs = void 0, buffer = void 0, idx = 0; \n    // get next character\n    buffer = str.charAt(idx++); \n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nexport function b64DecodeUnicode(str) {\n    return decodeURIComponent(Array.prototype.map.call(b64decode(str), function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n//# sourceMappingURL=helpers.js.map","export * from './auth.options';\nexport * from './auth.module';\nexport * from './components';\nexport * from './services';\nexport * from './strategies';\n//# sourceMappingURL=index.js.map","var NbAuthResult = /** @class */ (function () {\n    // TODO: better pass object\n    function NbAuthResult(success, response, redirect, errors, messages, token) {\n        if (token === void 0) { token = null; }\n        this.success = success;\n        this.response = response;\n        this.redirect = redirect;\n        this.errors = [];\n        this.messages = [];\n        this.errors = this.errors.concat([errors]);\n        if (errors instanceof Array) {\n            this.errors = errors;\n        }\n        this.messages = this.messages.concat([messages]);\n        if (messages instanceof Array) {\n            this.messages = messages;\n        }\n        this.token = token;\n    }\n    NbAuthResult.prototype.getResponse = function () {\n        return this.response;\n    };\n    NbAuthResult.prototype.getToken = function () {\n        return this.token;\n    };\n    NbAuthResult.prototype.getRedirect = function () {\n        return this.redirect;\n    };\n    NbAuthResult.prototype.getErrors = function () {\n        return this.errors.filter(function (val) { return !!val; });\n    };\n    NbAuthResult.prototype.getMessages = function () {\n        return this.messages.filter(function (val) { return !!val; });\n    };\n    NbAuthResult.prototype.isSuccess = function () {\n        return this.success;\n    };\n    NbAuthResult.prototype.isFailure = function () {\n        return !this.success;\n    };\n    return NbAuthResult;\n}());\nexport { NbAuthResult };\n//# sourceMappingURL=auth-result.js.map","import { Inject, Injectable } from '@angular/core';\nimport { of as observableOf } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { NB_AUTH_STRATEGIES } from '../auth.options';\nimport { NbTokenService } from './token/token.service';\n/**\n * Common authentication service.\n * Should be used to as an interlayer between UI Components and Auth Strategy.\n */\nvar NbAuthService = /** @class */ (function () {\n    function NbAuthService(tokenService, strategies) {\n        this.tokenService = tokenService;\n        this.strategies = strategies;\n    }\n    /**\n     * Retrieves current authenticated token stored\n     * @returns {Observable<any>}\n     */\n    /**\n       * Retrieves current authenticated token stored\n       * @returns {Observable<any>}\n       */\n    NbAuthService.prototype.getToken = /**\n       * Retrieves current authenticated token stored\n       * @returns {Observable<any>}\n       */\n    function () {\n        return this.tokenService.get();\n    };\n    /**\n     * Returns true if auth token is presented in the token storage\n     * @returns {Observable<any>}\n     */\n    /**\n       * Returns true if auth token is presented in the token storage\n       * @returns {Observable<any>}\n       */\n    NbAuthService.prototype.isAuthenticated = /**\n       * Returns true if auth token is presented in the token storage\n       * @returns {Observable<any>}\n       */\n    function () {\n        return this.getToken()\n            .pipe(map(function (token) { return token.isValid(); }));\n    };\n    /**\n     * Returns tokens stream\n     * @returns {Observable<NbAuthSimpleToken>}\n     */\n    /**\n       * Returns tokens stream\n       * @returns {Observable<NbAuthSimpleToken>}\n       */\n    NbAuthService.prototype.onTokenChange = /**\n       * Returns tokens stream\n       * @returns {Observable<NbAuthSimpleToken>}\n       */\n    function () {\n        return this.tokenService.tokenChange();\n    };\n    /**\n     * Returns authentication status stream\n     * @returns {Observable<boolean>}\n     */\n    /**\n       * Returns authentication status stream\n       * @returns {Observable<boolean>}\n       */\n    NbAuthService.prototype.onAuthenticationChange = /**\n       * Returns authentication status stream\n       * @returns {Observable<boolean>}\n       */\n    function () {\n        return this.onTokenChange()\n            .pipe(map(function (token) { return token.isValid(); }));\n    };\n    /**\n     * Authenticates with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * authenticate('email', {email: 'email@example.com', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    /**\n       * Authenticates with the selected strategy\n       * Stores received token in the token storage\n       *\n       * Example:\n       * authenticate('email', {email: 'email@example.com', password: 'test'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    NbAuthService.prototype.authenticate = /**\n       * Authenticates with the selected strategy\n       * Stores received token in the token storage\n       *\n       * Example:\n       * authenticate('email', {email: 'email@example.com', password: 'test'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    function (strategyName, data) {\n        var _this = this;\n        return this.getStrategy(strategyName).authenticate(data)\n            .pipe(switchMap(function (result) {\n            return _this.processResultToken(result);\n        }));\n    };\n    /**\n     * Registers with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * register('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    /**\n       * Registers with the selected strategy\n       * Stores received token in the token storage\n       *\n       * Example:\n       * register('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    NbAuthService.prototype.register = /**\n       * Registers with the selected strategy\n       * Stores received token in the token storage\n       *\n       * Example:\n       * register('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    function (strategyName, data) {\n        var _this = this;\n        return this.getStrategy(strategyName).register(data)\n            .pipe(switchMap(function (result) {\n            return _this.processResultToken(result);\n        }));\n    };\n    /**\n     * Sign outs with the selected strategy\n     * Removes token from the token storage\n     *\n     * Example:\n     * logout('email')\n     *\n     * @param strategyName\n     * @returns {Observable<NbAuthResult>}\n     */\n    /**\n       * Sign outs with the selected strategy\n       * Removes token from the token storage\n       *\n       * Example:\n       * logout('email')\n       *\n       * @param strategyName\n       * @returns {Observable<NbAuthResult>}\n       */\n    NbAuthService.prototype.logout = /**\n       * Sign outs with the selected strategy\n       * Removes token from the token storage\n       *\n       * Example:\n       * logout('email')\n       *\n       * @param strategyName\n       * @returns {Observable<NbAuthResult>}\n       */\n    function (strategyName) {\n        var _this = this;\n        return this.getStrategy(strategyName).logout()\n            .pipe(switchMap(function (result) {\n            if (result.isSuccess()) {\n                _this.tokenService.clear()\n                    .pipe(map(function () { return result; }));\n            }\n            return observableOf(result);\n        }));\n    };\n    /**\n     * Sends forgot password request to the selected strategy\n     *\n     * Example:\n     * requestPassword('email', {email: 'email@example.com'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    /**\n       * Sends forgot password request to the selected strategy\n       *\n       * Example:\n       * requestPassword('email', {email: 'email@example.com'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    NbAuthService.prototype.requestPassword = /**\n       * Sends forgot password request to the selected strategy\n       *\n       * Example:\n       * requestPassword('email', {email: 'email@example.com'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    function (strategyName, data) {\n        return this.getStrategy(strategyName).requestPassword(data);\n    };\n    /**\n     * Tries to reset password with the selected strategy\n     *\n     * Example:\n     * resetPassword('email', {newPassword: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    /**\n       * Tries to reset password with the selected strategy\n       *\n       * Example:\n       * resetPassword('email', {newPassword: 'test'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    NbAuthService.prototype.resetPassword = /**\n       * Tries to reset password with the selected strategy\n       *\n       * Example:\n       * resetPassword('email', {newPassword: 'test'})\n       *\n       * @param strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    function (strategyName, data) {\n        return this.getStrategy(strategyName).resetPassword(data);\n    };\n    /**\n     * Sends a refresh token request\n     * Stores received token in the token storage\n     *\n     * Example:\n     * refreshToken('email', {token: token})\n     *\n     * @param {string} strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    /**\n       * Sends a refresh token request\n       * Stores received token in the token storage\n       *\n       * Example:\n       * refreshToken('email', {token: token})\n       *\n       * @param {string} strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    NbAuthService.prototype.refreshToken = /**\n       * Sends a refresh token request\n       * Stores received token in the token storage\n       *\n       * Example:\n       * refreshToken('email', {token: token})\n       *\n       * @param {string} strategyName\n       * @param data\n       * @returns {Observable<NbAuthResult>}\n       */\n    function (strategyName, data) {\n        var _this = this;\n        return this.getStrategy(strategyName).refreshToken()\n            .pipe(switchMap(function (result) {\n            return _this.processResultToken(result);\n        }));\n    };\n    /**\n     * Get registered strategy by name\n     *\n     * Example:\n     * getStrategy('email')\n     *\n     * @param {string} provider\n     * @returns {NbAbstractAuthProvider}\n     */\n    /**\n       * Get registered strategy by name\n       *\n       * Example:\n       * getStrategy('email')\n       *\n       * @param {string} provider\n       * @returns {NbAbstractAuthProvider}\n       */\n    NbAuthService.prototype.getStrategy = /**\n       * Get registered strategy by name\n       *\n       * Example:\n       * getStrategy('email')\n       *\n       * @param {string} provider\n       * @returns {NbAbstractAuthProvider}\n       */\n    function (strategyName) {\n        var found = this.strategies.find(function (strategy) { return strategy.getName() === strategyName; });\n        if (!found) {\n            throw new TypeError(\"There is no Auth Strategy registered under '\" + strategyName + \"' name\");\n        }\n        return found;\n    };\n    NbAuthService.prototype.processResultToken = function (result) {\n        if (result.isSuccess() && result.getToken()) {\n            return this.tokenService.set(result.getToken())\n                .pipe(map(function (token) {\n                return result;\n            }));\n        }\n        return observableOf(result);\n    };\n    NbAuthService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbAuthService.ctorParameters = function () { return [\n        { type: NbTokenService, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_STRATEGIES,] },] },\n    ]; };\n    return NbAuthService;\n}());\nexport { NbAuthService };\n//# sourceMappingURL=auth.service.js.map","export * from './auth.service';\nexport * from './auth-result';\nexport * from './interceptors/jwt-interceptor';\nexport * from './interceptors/simple-interceptor';\nexport * from './token/token';\nexport * from './token/token-storage';\nexport * from './token/token.service';\nexport * from './token/token-parceler';\n//# sourceMappingURL=index.js.map","import { Injectable, Injector } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { NbAuthService } from '../auth.service';\nvar NbAuthJWTInterceptor = /** @class */ (function () {\n    function NbAuthJWTInterceptor(injector) {\n        this.injector = injector;\n    }\n    NbAuthJWTInterceptor.prototype.intercept = function (req, next) {\n        return this.authService.getToken()\n            .pipe(switchMap(function (token) {\n            if (token.isValid()) {\n                var JWT = \"Bearer \" + token.getValue();\n                req = req.clone({\n                    setHeaders: {\n                        Authorization: JWT,\n                    },\n                });\n            }\n            return next.handle(req);\n        }));\n    };\n    Object.defineProperty(NbAuthJWTInterceptor.prototype, \"authService\", {\n        get: function () {\n            return this.injector.get(NbAuthService);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbAuthJWTInterceptor.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbAuthJWTInterceptor.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return NbAuthJWTInterceptor;\n}());\nexport { NbAuthJWTInterceptor };\n//# sourceMappingURL=jwt-interceptor.js.map","import { Inject, Injectable, Injector } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { NbAuthService } from '../auth.service';\nimport { NB_AUTH_INTERCEPTOR_HEADER } from '../../auth.options';\nvar NbAuthSimpleInterceptor = /** @class */ (function () {\n    function NbAuthSimpleInterceptor(injector, headerName) {\n        if (headerName === void 0) { headerName = 'Authorization'; }\n        this.injector = injector;\n        this.headerName = headerName;\n    }\n    NbAuthSimpleInterceptor.prototype.intercept = function (req, next) {\n        var _this = this;\n        return this.authService.getToken()\n            .pipe(switchMap(function (token) {\n            if (token && token.getValue()) {\n                req = req.clone({\n                    setHeaders: (_a = {},\n                        _a[_this.headerName] = token.getValue(),\n                        _a),\n                });\n            }\n            return next.handle(req);\n            var _a;\n        }));\n    };\n    Object.defineProperty(NbAuthSimpleInterceptor.prototype, \"authService\", {\n        get: function () {\n            return this.injector.get(NbAuthService);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbAuthSimpleInterceptor.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbAuthSimpleInterceptor.ctorParameters = function () { return [\n        { type: Injector, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_INTERCEPTOR_HEADER,] },] },\n    ]; };\n    return NbAuthSimpleInterceptor;\n}());\nexport { NbAuthSimpleInterceptor };\n//# sourceMappingURL=simple-interceptor.js.map","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { nbAuthCreateToken } from './token';\nimport { NB_AUTH_TOKENS } from '../../auth.options';\nexport var NB_AUTH_FALLBACK_TOKEN = new InjectionToken('Nebular Auth Options');\n/**\n * Creates a token parcel which could be stored/restored\n */\nvar NbAuthTokenParceler = /** @class */ (function () {\n    function NbAuthTokenParceler(fallbackClass, tokenClasses) {\n        this.fallbackClass = fallbackClass;\n        this.tokenClasses = tokenClasses;\n    }\n    NbAuthTokenParceler.prototype.wrap = function (token) {\n        return JSON.stringify({\n            name: token.getName(),\n            value: token.toString(),\n        });\n    };\n    NbAuthTokenParceler.prototype.unwrap = function (value) {\n        var tokenClass;\n        var tokenValue = '';\n        try {\n            var tokenPack = JSON.parse(value);\n            tokenClass = this.getClassByName(tokenPack.name) || this.fallbackClass;\n            tokenValue = tokenPack.value;\n        }\n        catch (e) {\n            tokenClass = this.fallbackClass;\n        }\n        return nbAuthCreateToken(tokenClass, tokenValue);\n    };\n    // TODO: this could be moved to a separate token registry\n    // TODO: this could be moved to a separate token registry\n    NbAuthTokenParceler.prototype.getClassByName = \n    // TODO: this could be moved to a separate token registry\n    function (name) {\n        return this.tokenClasses.find(function (tokenClass) { return tokenClass.NAME === name; });\n    };\n    NbAuthTokenParceler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbAuthTokenParceler.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [NB_AUTH_FALLBACK_TOKEN,] },] },\n        { type: Array, decorators: [{ type: Inject, args: [NB_AUTH_TOKENS,] },] },\n    ]; };\n    return NbAuthTokenParceler;\n}());\nexport { NbAuthTokenParceler };\n//# sourceMappingURL=token-parceler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nimport { NbAuthTokenParceler } from './token-parceler';\nvar NbTokenStorage = /** @class */ (function () {\n    function NbTokenStorage() {\n    }\n    return NbTokenStorage;\n}());\nexport { NbTokenStorage };\n/**\n * Service that uses browser localStorage as a storage.\n *\n * The token storage is provided into auth module the following way:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n * ```\n *\n * If you need to change the storage behaviour or provide your own - just extend your class from basic `NbTokenStorage`\n * or `NbTokenLocalStorage` and provide in your `app.module`:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenCustomStorage },\n * ```\n *\n */\nvar NbTokenLocalStorage = /** @class */ (function (_super) {\n    __extends(NbTokenLocalStorage, _super);\n    function NbTokenLocalStorage(parceler) {\n        var _this = _super.call(this) || this;\n        _this.parceler = parceler;\n        _this.key = 'auth_app_token';\n        return _this;\n    }\n    /**\n     * Returns token from localStorage\n     * @returns {NbAuthToken}\n     */\n    /**\n       * Returns token from localStorage\n       * @returns {NbAuthToken}\n       */\n    NbTokenLocalStorage.prototype.get = /**\n       * Returns token from localStorage\n       * @returns {NbAuthToken}\n       */\n    function () {\n        var raw = localStorage.getItem(this.key);\n        return this.parceler.unwrap(raw);\n    };\n    /**\n     * Sets token to localStorage\n     * @param {NbAuthToken} token\n     */\n    /**\n       * Sets token to localStorage\n       * @param {NbAuthToken} token\n       */\n    NbTokenLocalStorage.prototype.set = /**\n       * Sets token to localStorage\n       * @param {NbAuthToken} token\n       */\n    function (token) {\n        var raw = this.parceler.wrap(token);\n        localStorage.setItem(this.key, raw);\n    };\n    /**\n     * Clears token from localStorage\n     */\n    /**\n       * Clears token from localStorage\n       */\n    NbTokenLocalStorage.prototype.clear = /**\n       * Clears token from localStorage\n       */\n    function () {\n        localStorage.removeItem(this.key);\n    };\n    NbTokenLocalStorage.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbTokenLocalStorage.ctorParameters = function () { return [\n        { type: NbAuthTokenParceler, },\n    ]; };\n    return NbTokenLocalStorage;\n}(NbTokenStorage));\nexport { NbTokenLocalStorage };\n//# sourceMappingURL=token-storage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { urlBase64Decode } from '../../helpers';\nvar NbAuthToken = /** @class */ (function () {\n    function NbAuthToken() {\n    }\n    NbAuthToken.prototype.getName = function () {\n        return this.constructor.NAME;\n    };\n    return NbAuthToken;\n}());\nexport { NbAuthToken };\nexport function nbAuthCreateToken(tokenClass, token) {\n    return new tokenClass(token);\n}\n/**\n * Wrapper for simple (text) token\n */\nvar NbAuthSimpleToken = /** @class */ (function (_super) {\n    __extends(NbAuthSimpleToken, _super);\n    function NbAuthSimpleToken(token) {\n        var _this = _super.call(this) || this;\n        _this.token = token;\n        return _this;\n    }\n    /**\n     * Returns the token value\n     * @returns string\n     */\n    /**\n       * Returns the token value\n       * @returns string\n       */\n    NbAuthSimpleToken.prototype.getValue = /**\n       * Returns the token value\n       * @returns string\n       */\n    function () {\n        return this.token;\n    };\n    NbAuthSimpleToken.prototype.getPayload = function () {\n        return null;\n    };\n    /**\n     * Is non empty and valid\n     * @returns {boolean}\n     */\n    /**\n       * Is non empty and valid\n       * @returns {boolean}\n       */\n    NbAuthSimpleToken.prototype.isValid = /**\n       * Is non empty and valid\n       * @returns {boolean}\n       */\n    function () {\n        return !!this.getValue();\n    };\n    /**\n     * Validate value and convert to string, if value is not valid return empty string\n     * @returns {string}\n     */\n    /**\n       * Validate value and convert to string, if value is not valid return empty string\n       * @returns {string}\n       */\n    NbAuthSimpleToken.prototype.toString = /**\n       * Validate value and convert to string, if value is not valid return empty string\n       * @returns {string}\n       */\n    function () {\n        return !!this.token ? this.token : '';\n    };\n    NbAuthSimpleToken.NAME = 'nb:auth:simple:token';\n    return NbAuthSimpleToken;\n}(NbAuthToken));\nexport { NbAuthSimpleToken };\n/**\n * Wrapper for JWT token with additional methods.\n */\nvar NbAuthJWTToken = /** @class */ (function (_super) {\n    __extends(NbAuthJWTToken, _super);\n    function NbAuthJWTToken() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns payload object\n     * @returns any\n     */\n    /**\n       * Returns payload object\n       * @returns any\n       */\n    NbAuthJWTToken.prototype.getPayload = /**\n       * Returns payload object\n       * @returns any\n       */\n    function () {\n        if (!this.token) {\n            throw new Error('Cannot extract payload from an empty token.');\n        }\n        var parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error(\"The token \" + this.token + \" is not valid JWT token and must consist of three parts.\");\n        }\n        var decoded;\n        try {\n            decoded = urlBase64Decode(parts[1]);\n        }\n        catch (e) {\n            throw new Error(\"The token \" + this.token + \" is not valid JWT token and cannot be parsed.\");\n        }\n        if (!decoded) {\n            throw new Error(\"The token \" + this.token + \" is not valid JWT token and cannot be decoded.\");\n        }\n        return JSON.parse(decoded);\n    };\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n    /**\n       * Returns expiration date\n       * @returns Date\n       */\n    NbAuthJWTToken.prototype.getTokenExpDate = /**\n       * Returns expiration date\n       * @returns Date\n       */\n    function () {\n        var decoded = this.getPayload();\n        if (!decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n        var date = new Date(0);\n        date.setUTCSeconds(decoded.exp);\n        return date;\n    };\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n    /**\n       * Is data expired\n       * @returns {boolean}\n       */\n    NbAuthJWTToken.prototype.isValid = /**\n       * Is data expired\n       * @returns {boolean}\n       */\n    function () {\n        return _super.prototype.isValid.call(this) && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    };\n    NbAuthJWTToken.NAME = 'nb:auth:jwt:token';\n    return NbAuthJWTToken;\n}(NbAuthSimpleToken));\nexport { NbAuthJWTToken };\nvar prepareOAuth2Token = function (data) {\n    if (typeof data === 'string') {\n        try {\n            return JSON.parse(data);\n        }\n        catch (e) { }\n    }\n    return data;\n};\nvar ɵ0 = prepareOAuth2Token;\n/**\n * Wrapper for OAuth2 token\n */\nvar NbAuthOAuth2Token = /** @class */ (function (_super) {\n    __extends(NbAuthOAuth2Token, _super);\n    function NbAuthOAuth2Token(data) {\n        if (data === void 0) { data = {}; }\n        var _this = \n        // we may get it as string when retrieving from a storage\n        _super.call(this, prepareOAuth2Token(data)) || this;\n        _this.data = data;\n        return _this;\n    }\n    /**\n     * Returns the token value\n     * @returns string\n     */\n    /**\n       * Returns the token value\n       * @returns string\n       */\n    NbAuthOAuth2Token.prototype.getValue = /**\n       * Returns the token value\n       * @returns string\n       */\n    function () {\n        return this.token.access_token;\n    };\n    /**\n     * Returns the refresh token\n     * @returns string\n     */\n    /**\n       * Returns the refresh token\n       * @returns string\n       */\n    NbAuthOAuth2Token.prototype.getRefreshToken = /**\n       * Returns the refresh token\n       * @returns string\n       */\n    function () {\n        return this.token.refresh_token;\n    };\n    /**\n     * Returns token payload\n     * @returns any\n     */\n    /**\n       * Returns token payload\n       * @returns any\n       */\n    NbAuthOAuth2Token.prototype.getPayload = /**\n       * Returns token payload\n       * @returns any\n       */\n    function () {\n        if (!this.token || !Object.keys(this.token).length) {\n            throw new Error('Cannot extract payload from an empty token.');\n        }\n        return this.token;\n    };\n    /**\n     * Returns the token type\n     * @returns string\n     */\n    /**\n       * Returns the token type\n       * @returns string\n       */\n    NbAuthOAuth2Token.prototype.getType = /**\n       * Returns the token type\n       * @returns string\n       */\n    function () {\n        return this.token.token_type;\n    };\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n    /**\n       * Is data expired\n       * @returns {boolean}\n       */\n    NbAuthOAuth2Token.prototype.isValid = /**\n       * Is data expired\n       * @returns {boolean}\n       */\n    function () {\n        return _super.prototype.isValid.call(this) && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    };\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n    /**\n       * Returns expiration date\n       * @returns Date\n       */\n    NbAuthOAuth2Token.prototype.getTokenExpDate = /**\n       * Returns expiration date\n       * @returns Date\n       */\n    function () {\n        if (!this.token.hasOwnProperty('expires_in')) {\n            return null;\n        }\n        var date = new Date();\n        date.setUTCSeconds(new Date().getUTCSeconds() + Number(this.token.expires_in));\n        return date;\n    };\n    /**\n     * Convert to string\n     * @returns {string}\n     */\n    /**\n       * Convert to string\n       * @returns {string}\n       */\n    NbAuthOAuth2Token.prototype.toString = /**\n       * Convert to string\n       * @returns {string}\n       */\n    function () {\n        return JSON.stringify(this.token);\n    };\n    NbAuthOAuth2Token.NAME = 'nb:auth:oauth2:token';\n    return NbAuthOAuth2Token;\n}(NbAuthSimpleToken));\nexport { NbAuthOAuth2Token };\nexport { ɵ0 };\n//# sourceMappingURL=token.js.map","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, of as observableOf } from 'rxjs';\nimport { filter, share } from 'rxjs/operators';\nimport { NbTokenStorage } from './token-storage';\n/**\n * Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time.\n */\nvar NbTokenService = /** @class */ (function () {\n    function NbTokenService(tokenStorage) {\n        this.tokenStorage = tokenStorage;\n        this.token$ = new BehaviorSubject(null);\n        this.publishStoredToken();\n    }\n    /**\n     * Publishes token when it changes.\n     * @returns {Observable<NbAuthToken>}\n     */\n    /**\n       * Publishes token when it changes.\n       * @returns {Observable<NbAuthToken>}\n       */\n    NbTokenService.prototype.tokenChange = /**\n       * Publishes token when it changes.\n       * @returns {Observable<NbAuthToken>}\n       */\n    function () {\n        return this.token$\n            .pipe(filter(function (value) { return !!value; }), share());\n    };\n    /**\n     * Sets a token into the storage. This method is used by the NbAuthService automatically.\n     *\n     * @param {NbAuthToken} token\n     * @returns {Observable<any>}\n     */\n    /**\n       * Sets a token into the storage. This method is used by the NbAuthService automatically.\n       *\n       * @param {NbAuthToken} token\n       * @returns {Observable<any>}\n       */\n    NbTokenService.prototype.set = /**\n       * Sets a token into the storage. This method is used by the NbAuthService automatically.\n       *\n       * @param {NbAuthToken} token\n       * @returns {Observable<any>}\n       */\n    function (token) {\n        this.tokenStorage.set(token);\n        this.publishStoredToken();\n        return observableOf(null);\n    };\n    /**\n     * Returns observable of current token\n     * @returns {Observable<NbAuthToken>}\n     */\n    /**\n       * Returns observable of current token\n       * @returns {Observable<NbAuthToken>}\n       */\n    NbTokenService.prototype.get = /**\n       * Returns observable of current token\n       * @returns {Observable<NbAuthToken>}\n       */\n    function () {\n        var token = this.tokenStorage.get();\n        return observableOf(token);\n    };\n    /**\n     * Removes the token and published token value\n     *\n     * @returns {Observable<any>}\n     */\n    /**\n       * Removes the token and published token value\n       *\n       * @returns {Observable<any>}\n       */\n    NbTokenService.prototype.clear = /**\n       * Removes the token and published token value\n       *\n       * @returns {Observable<any>}\n       */\n    function () {\n        this.tokenStorage.clear();\n        this.publishStoredToken();\n        return observableOf(null);\n    };\n    NbTokenService.prototype.publishStoredToken = function () {\n        this.token$.next(this.tokenStorage.get());\n    };\n    NbTokenService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbTokenService.ctorParameters = function () { return [\n        { type: NbTokenStorage, },\n    ]; };\n    return NbTokenService;\n}());\nexport { NbTokenService };\n//# sourceMappingURL=token.service.js.map","var NbAuthStrategyOptions = /** @class */ (function () {\n    function NbAuthStrategyOptions() {\n    }\n    return NbAuthStrategyOptions;\n}());\nexport { NbAuthStrategyOptions };\n//# sourceMappingURL=auth-strategy-options.js.map","import { HttpResponse } from '@angular/common/http';\nimport { deepExtend, getDeepFromObject } from '../helpers';\nimport { nbAuthCreateToken } from '../services/token/token';\nvar NbAuthStrategy = /** @class */ (function () {\n    function NbAuthStrategy() {\n    }\n    // we should keep this any and validation should be done in `register` method instead\n    // otherwise it won't be possible to pass an empty object\n    // we should keep this any and validation should be done in `register` method instead\n    // otherwise it won't be possible to pass an empty object\n    NbAuthStrategy.prototype.setOptions = \n    // we should keep this any and validation should be done in `register` method instead\n    // otherwise it won't be possible to pass an empty object\n    function (options) {\n        this.options = deepExtend({}, this.defaultOptions, options);\n    };\n    NbAuthStrategy.prototype.getOption = function (key) {\n        return getDeepFromObject(this.options, key, null);\n    };\n    NbAuthStrategy.prototype.createToken = function (value) {\n        return nbAuthCreateToken(this.getOption('token.class'), value);\n    };\n    NbAuthStrategy.prototype.getName = function () {\n        return this.getOption('name');\n    };\n    NbAuthStrategy.prototype.createFailResponse = function (data) {\n        return new HttpResponse({ body: {}, status: 401 });\n    };\n    NbAuthStrategy.prototype.createSuccessResponse = function (data) {\n        return new HttpResponse({ body: {}, status: 200 });\n    };\n    NbAuthStrategy.prototype.getActionEndpoint = function (action) {\n        var actionEndpoint = this.getOption(action + \".endpoint\");\n        var baseEndpoint = this.getOption('baseEndpoint');\n        return baseEndpoint + actionEndpoint;\n    };\n    return NbAuthStrategy;\n}());\nexport { NbAuthStrategy };\n//# sourceMappingURL=auth-strategy.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { NbAuthStrategyOptions } from '../auth-strategy-options';\nimport { NbAuthSimpleToken } from '../../services/';\nvar NbDummyAuthStrategyOptions = /** @class */ (function (_super) {\n    __extends(NbDummyAuthStrategyOptions, _super);\n    function NbDummyAuthStrategyOptions() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.token = {\n            class: NbAuthSimpleToken,\n        };\n        _this.delay = 1000;\n        _this.alwaysFail = false;\n        return _this;\n    }\n    return NbDummyAuthStrategyOptions;\n}(NbAuthStrategyOptions));\nexport { NbDummyAuthStrategyOptions };\nexport var dummyStrategyOptions = new NbDummyAuthStrategyOptions();\n//# sourceMappingURL=dummy-strategy-options.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nimport { of as observableOf } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { NbAuthStrategy } from '../auth-strategy';\nimport { NbAuthResult } from '../../services/auth-result';\nimport { dummyStrategyOptions } from './dummy-strategy-options';\n/**\n * Dummy auth strategy. Could be useful for auth setup when backend is not available yet.\n *\n *\n * Strategy settings.\n *\n * ```ts\n * export class NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n *   name = 'dummy';\n *   token = {\n *     class: NbAuthSimpleToken,\n *   };\n *   delay? = 1000;\n *   alwaysFail? = false;\n * }\n * ```\n */\nvar NbDummyAuthStrategy = /** @class */ (function (_super) {\n    __extends(NbDummyAuthStrategy, _super);\n    function NbDummyAuthStrategy() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.defaultOptions = dummyStrategyOptions;\n        return _this;\n    }\n    NbDummyAuthStrategy.setup = function (options) {\n        return [NbDummyAuthStrategy, options];\n    };\n    NbDummyAuthStrategy.prototype.authenticate = function (data) {\n        return observableOf(this.createDummyResult(data))\n            .pipe(delay(this.getOption('delay')));\n    };\n    NbDummyAuthStrategy.prototype.register = function (data) {\n        return observableOf(this.createDummyResult(data))\n            .pipe(delay(this.getOption('delay')));\n    };\n    NbDummyAuthStrategy.prototype.requestPassword = function (data) {\n        return observableOf(this.createDummyResult(data))\n            .pipe(delay(this.getOption('delay')));\n    };\n    NbDummyAuthStrategy.prototype.resetPassword = function (data) {\n        return observableOf(this.createDummyResult(data))\n            .pipe(delay(this.getOption('delay')));\n    };\n    NbDummyAuthStrategy.prototype.logout = function (data) {\n        return observableOf(this.createDummyResult(data))\n            .pipe(delay(this.getOption('delay')));\n    };\n    NbDummyAuthStrategy.prototype.refreshToken = function (data) {\n        return observableOf(this.createDummyResult(data))\n            .pipe(delay(this.getOption('delay')));\n    };\n    NbDummyAuthStrategy.prototype.createDummyResult = function (data) {\n        if (this.getOption('alwaysFail')) {\n            return new NbAuthResult(false, this.createFailResponse(data), null, ['Something went wrong.']);\n        }\n        return new NbAuthResult(true, this.createSuccessResponse(data), '/', [], ['Successfully logged in.'], this.createToken('test token'));\n    };\n    NbDummyAuthStrategy.decorators = [\n        { type: Injectable },\n    ];\n    return NbDummyAuthStrategy;\n}(NbAuthStrategy));\nexport { NbDummyAuthStrategy };\n//# sourceMappingURL=dummy-strategy.js.map","export * from './auth-strategy';\nexport * from './auth-strategy-options';\nexport * from './dummy/dummy-strategy';\nexport * from './dummy/dummy-strategy-options';\nexport * from './password/password-strategy';\nexport * from './password/password-strategy-options';\nexport * from './oauth2/oauth2-strategy';\nexport * from './oauth2/oauth2-strategy.options';\n//# sourceMappingURL=index.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { NB_WINDOW } from '@nebular/theme';\nimport { NbAuthStrategy } from '../auth-strategy';\nimport { NbAuthResult } from '../../services/';\nimport { NbOAuth2ResponseType, auth2StrategyOptions } from './oauth2-strategy.options';\n/**\n * OAuth2 authentication strategy.\n *\n * Strategy settings:\n *\n * ```ts\n * export enum NbOAuth2ResponseType {\n *   CODE = 'code',\n *   TOKEN = 'token',\n * }\n *\n * export enum NbOAuth2GrantType {\n *   AUTHORIZATION_CODE = 'authorization_code',\n *   REFRESH_TOKEN = 'refresh_token',\n * }\n *\n * export class NbOAuth2AuthStrategyOptions {\n *   name: string;\n *   baseEndpoint?: string = '';\n *   clientId: string = '';\n *   clientSecret: string = '';\n *   redirect?: { success?: string; failure?: string } = {\n *     success: '/',\n *     failure: null,\n *   };\n *   defaultErrors?: any[] = ['Something went wrong, please try again.'];\n *   defaultMessages?: any[] = ['You have been successfully authenticated.'];\n *   authorize?: {\n *     endpoint?: string;\n *     redirectUri?: string;\n *     responseType?: string;\n *     scope?: string;\n *     state?: string;\n *     params?: { [key: string]: string };\n *   } = {\n *     endpoint: 'authorize',\n *     responseType: NbOAuth2ResponseType.CODE,\n *   };\n *   token?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     redirectUri?: string;\n *     class: NbAuthTokenClass,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n *     class: NbAuthOAuth2Token,\n *   };\n *   refresh?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     scope?: string;\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n *   };\n * }\n * ```\n *\n */\nvar NbOAuth2AuthStrategy = /** @class */ (function (_super) {\n    __extends(NbOAuth2AuthStrategy, _super);\n    function NbOAuth2AuthStrategy(http, route, window) {\n        var _this = _super.call(this) || this;\n        _this.http = http;\n        _this.route = route;\n        _this.window = window;\n        _this.redirectResultHandlers = (_a = {},\n            _a[NbOAuth2ResponseType.CODE] = function () {\n                return observableOf(_this.route.snapshot.queryParams).pipe(switchMap(function (params) {\n                    if (params.code) {\n                        return _this.requestToken(params.code);\n                    }\n                    return observableOf(new NbAuthResult(false, params, _this.getOption('redirect.failure'), _this.getOption('defaultErrors'), []));\n                }));\n            },\n            _a[NbOAuth2ResponseType.TOKEN] = function () {\n                return observableOf(_this.route.snapshot.fragment).pipe(map(function (fragment) { return _this.parseHashAsQueryParams(fragment); }), map(function (params) {\n                    if (!params.error) {\n                        return new NbAuthResult(true, params, _this.getOption('redirect.success'), [], _this.getOption('defaultMessages'), _this.createToken(params));\n                    }\n                    return new NbAuthResult(false, params, _this.getOption('redirect.failure'), _this.getOption('defaultErrors'), []);\n                }));\n            },\n            _a);\n        _this.redirectResults = (_b = {},\n            _b[NbOAuth2ResponseType.CODE] = function () {\n                return observableOf(_this.route.snapshot.queryParams).pipe(map(function (params) { return !!(params && (params.code || params.error)); }));\n            },\n            _b[NbOAuth2ResponseType.TOKEN] = function () {\n                return observableOf(_this.route.snapshot.fragment).pipe(map(function (fragment) { return _this.parseHashAsQueryParams(fragment); }), map(function (params) { return !!(params && (params.access_token || params.error)); }));\n            },\n            _b);\n        _this.defaultOptions = auth2StrategyOptions;\n        return _this;\n        var _a, _b;\n    }\n    NbOAuth2AuthStrategy.setup = function (options) {\n        return [NbOAuth2AuthStrategy, options];\n    };\n    Object.defineProperty(NbOAuth2AuthStrategy.prototype, \"responseType\", {\n        get: function () {\n            return this.getOption('authorize.responseType');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NbOAuth2AuthStrategy.prototype.authenticate = function () {\n        var _this = this;\n        return this.isRedirectResult()\n            .pipe(switchMap(function (result) {\n            if (!result) {\n                _this.authorizeRedirect();\n                return observableOf(new NbAuthResult(true));\n            }\n            return _this.getAuthorizationResult();\n        }));\n    };\n    NbOAuth2AuthStrategy.prototype.getAuthorizationResult = function () {\n        var redirectResultHandler = this.redirectResultHandlers[this.responseType];\n        if (redirectResultHandler) {\n            return redirectResultHandler.call(this);\n        }\n        throw new Error(\"'\" + this.responseType + \"' responseType is not supported,\\n                      only 'token' and 'code' are supported now\");\n    };\n    NbOAuth2AuthStrategy.prototype.refreshToken = function (token) {\n        var _this = this;\n        var url = this.getActionEndpoint('refresh');\n        return this.http.post(url, this.buildRefreshRequestData(token))\n            .pipe(map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('redirect.success'), [], _this.getOption('defaultMessages'), _this.createToken(res));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('defaultErrors');\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('redirect.failure'), errors, []));\n        }));\n    };\n    NbOAuth2AuthStrategy.prototype.authorizeRedirect = function () {\n        this.window.location.href = this.buildRedirectUrl();\n    };\n    NbOAuth2AuthStrategy.prototype.isRedirectResult = function () {\n        return this.redirectResults[this.responseType].call(this);\n    };\n    NbOAuth2AuthStrategy.prototype.requestToken = function (code) {\n        var _this = this;\n        var url = this.getActionEndpoint('token');\n        return this.http.post(url, this.buildCodeRequestData(code))\n            .pipe(map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('redirect.success'), [], _this.getOption('defaultMessages'), _this.createToken(res));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('defaultErrors');\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('redirect.failure'), errors, []));\n        }));\n    };\n    NbOAuth2AuthStrategy.prototype.buildCodeRequestData = function (code) {\n        var params = {\n            grant_type: this.getOption('token.grantType'),\n            code: code,\n            redirect_uri: this.getOption('token.redirectUri'),\n            client_id: this.getOption('clientId'),\n        };\n        Object.entries(params)\n            .forEach(function (_a) {\n            var key = _a[0], val = _a[1];\n            return !val && delete params[key];\n        });\n        return params;\n    };\n    NbOAuth2AuthStrategy.prototype.buildRefreshRequestData = function (token) {\n        var params = {\n            grant_type: this.getOption('refresh.grantType'),\n            refresh_token: token.getRefreshToken(),\n            scope: this.getOption('refresh.scope'),\n        };\n        Object.entries(params)\n            .forEach(function (_a) {\n            var key = _a[0], val = _a[1];\n            return !val && delete params[key];\n        });\n        return params;\n    };\n    NbOAuth2AuthStrategy.prototype.buildRedirectUrl = function () {\n        var params = __assign({ response_type: this.getOption('authorize.responseType'), client_id: this.getOption('clientId'), redirect_uri: this.getOption('authorize.redirectUri'), scope: this.getOption('authorize.scope'), state: this.getOption('authorize.state') }, this.getOption('authorize.params'));\n        var endpoint = this.getActionEndpoint('authorize');\n        var query = Object.entries(params)\n            .filter(function (_a) {\n            var key = _a[0], val = _a[1];\n            return !!val;\n        })\n            .map(function (_a) {\n            var key = _a[0], val = _a[1];\n            return key + \"=\" + encodeURIComponent(val);\n        })\n            .join('&');\n        return endpoint + \"?\" + query;\n    };\n    NbOAuth2AuthStrategy.prototype.parseHashAsQueryParams = function (hash) {\n        return hash ? hash.split('&').reduce(function (acc, part) {\n            var item = part.split('=');\n            acc[item[0]] = decodeURIComponent(item[1]);\n            return acc;\n        }, {}) : {};\n    };\n    NbOAuth2AuthStrategy.prototype.register = function (data) {\n        throw new Error('`register` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    };\n    NbOAuth2AuthStrategy.prototype.requestPassword = function (data) {\n        throw new Error('`requestPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    };\n    NbOAuth2AuthStrategy.prototype.resetPassword = function (data) {\n        if (data === void 0) { data = {}; }\n        throw new Error('`resetPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    };\n    NbOAuth2AuthStrategy.prototype.logout = function () {\n        return observableOf(new NbAuthResult(true));\n    };\n    NbOAuth2AuthStrategy.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbOAuth2AuthStrategy.ctorParameters = function () { return [\n        { type: HttpClient, },\n        { type: ActivatedRoute, },\n        { type: undefined, decorators: [{ type: Inject, args: [NB_WINDOW,] },] },\n    ]; };\n    return NbOAuth2AuthStrategy;\n}(NbAuthStrategy));\nexport { NbOAuth2AuthStrategy };\n//# sourceMappingURL=oauth2-strategy.js.map","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { NbAuthOAuth2Token } from '../../services';\nexport var NbOAuth2ResponseType;\n(function (NbOAuth2ResponseType) {\n    NbOAuth2ResponseType[\"CODE\"] = \"code\";\n    NbOAuth2ResponseType[\"TOKEN\"] = \"token\";\n})(NbOAuth2ResponseType || (NbOAuth2ResponseType = {}));\n// TODO: password, client_credentials\n// TODO: password, client_credentials\nexport var NbOAuth2GrantType;\n// TODO: password, client_credentials\n(function (NbOAuth2GrantType) {\n    NbOAuth2GrantType[\"AUTHORIZATION_CODE\"] = \"authorization_code\";\n    NbOAuth2GrantType[\"REFRESH_TOKEN\"] = \"refresh_token\";\n})(NbOAuth2GrantType || (NbOAuth2GrantType = {}));\nvar NbOAuth2AuthStrategyOptions = /** @class */ (function () {\n    function NbOAuth2AuthStrategyOptions() {\n        this.baseEndpoint = '';\n        this.clientId = '';\n        this.clientSecret = '';\n        this.redirect = {\n            success: '/',\n            failure: null,\n        };\n        this.defaultErrors = ['Something went wrong, please try again.'];\n        this.defaultMessages = ['You have been successfully authenticated.'];\n        this.authorize = {\n            endpoint: 'authorize',\n            responseType: NbOAuth2ResponseType.CODE,\n        };\n        this.token = {\n            endpoint: 'token',\n            grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n            class: NbAuthOAuth2Token,\n        };\n        this.refresh = {\n            endpoint: 'token',\n            grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n        };\n    }\n    return NbOAuth2AuthStrategyOptions;\n}());\nexport { NbOAuth2AuthStrategyOptions };\nexport var auth2StrategyOptions = new NbOAuth2AuthStrategyOptions();\n//# sourceMappingURL=oauth2-strategy.options.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { NbAuthSimpleToken } from '../../services';\nimport { NbAuthStrategyOptions } from '../auth-strategy-options';\nimport { getDeepFromObject } from '../../helpers';\nvar NbPasswordAuthStrategyOptions = /** @class */ (function (_super) {\n    __extends(NbPasswordAuthStrategyOptions, _super);\n    function NbPasswordAuthStrategyOptions() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.baseEndpoint = '/api/auth/';\n        _this.login = {\n            alwaysFail: false,\n            rememberMe: true,\n            // TODO: what does that mean?\n            endpoint: 'login',\n            method: 'post',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Login/Email combination is not correct, please try again.'],\n            defaultMessages: ['You have been successfully logged in.'],\n        };\n        _this.register = {\n            alwaysFail: false,\n            rememberMe: true,\n            endpoint: 'register',\n            method: 'post',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['You have been successfully registered.'],\n        };\n        _this.requestPass = {\n            endpoint: 'request-pass',\n            method: 'post',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Reset password instructions have been sent to your email.'],\n        };\n        _this.resetPass = {\n            endpoint: 'reset-pass',\n            method: 'put',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            resetPasswordTokenKey: 'reset_password_token',\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Your password has been successfully changed.'],\n        };\n        _this.logout = {\n            alwaysFail: false,\n            endpoint: 'logout',\n            method: 'delete',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['You have been successfully logged out.'],\n        };\n        _this.refreshToken = {\n            endpoint: 'refresh-token',\n            method: 'post',\n            redirect: {\n                success: null,\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Your token has been successfully refreshed.'],\n        };\n        _this.token = {\n            class: NbAuthSimpleToken,\n            key: 'data.token',\n            getter: function (module, res, options) {\n                return getDeepFromObject(res.body, options.token.key);\n            },\n        };\n        _this.errors = {\n            key: 'data.errors',\n            getter: function (module, res, options) {\n                return getDeepFromObject(res.error, options.errors.key, options[module].defaultErrors);\n            },\n        };\n        _this.messages = {\n            key: 'data.messages',\n            getter: function (module, res, options) {\n                return getDeepFromObject(res.body, options.messages.key, options[module].defaultMessages);\n            },\n        };\n        return _this;\n    }\n    return NbPasswordAuthStrategyOptions;\n}(NbAuthStrategyOptions));\nexport { NbPasswordAuthStrategyOptions };\nexport var passwordStrategyOptions = new NbPasswordAuthStrategyOptions();\n//# sourceMappingURL=password-strategy-options.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { NbAuthResult } from '../../services/auth-result';\nimport { NbAuthStrategy } from '../auth-strategy';\nimport { passwordStrategyOptions } from './password-strategy-options';\n/**\n * The most common authentication provider for email/password strategy.\n *\n * Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\n * Also, this.getOption call won't work outside of the default options declaration\n * (which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\n * if you need it.\n *\n * ```ts\n *export class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n *  name: string;\n *  baseEndpoint? = '/api/auth/';\n *  login?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    rememberMe: true, // TODO: what does that mean?\n *    endpoint: 'login',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  };\n *  register?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    rememberMe: true,\n *    endpoint: 'register',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  };\n *  requestPass?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  };\n *  resetPass?: boolean | NbPasswordStrategyReset = {\n *    endpoint: 'reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  };\n *  logout?: boolean | NbPasswordStrategyReset = {\n *    alwaysFail: false,\n *    endpoint: 'logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  };\n *  refreshToken?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'refresh-token',\n *    method: 'post',\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  };\n *  token?: NbPasswordStrategyToken = {\n *    class: NbAuthSimpleToken,\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.token.key,\n *    ),\n *  };\n *  errors?: NbPasswordStrategyMessage = {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.error,\n *      options.errors.key,\n *      options[module].defaultErrors,\n *    ),\n *  };\n *  messages?: NbPasswordStrategyMessage = {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.messages.key,\n *      options[module].defaultMessages,\n *    ),\n *  };\n *  validation?: {\n *    password?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *    email?: {\n *      required?: boolean;\n *      regexp?: string | null;\n *    };\n *    fullName?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *  };\n *}\n * ```\n */\nvar NbPasswordAuthStrategy = /** @class */ (function (_super) {\n    __extends(NbPasswordAuthStrategy, _super);\n    function NbPasswordAuthStrategy(http, route) {\n        var _this = _super.call(this) || this;\n        _this.http = http;\n        _this.route = route;\n        _this.defaultOptions = passwordStrategyOptions;\n        return _this;\n    }\n    NbPasswordAuthStrategy.setup = function (options) {\n        return [NbPasswordAuthStrategy, options];\n    };\n    NbPasswordAuthStrategy.prototype.authenticate = function (data) {\n        var _this = this;\n        var method = this.getOption('login.method');\n        var url = this.getActionEndpoint('login');\n        return this.http.request(method, url, { body: data, observe: 'response' })\n            .pipe(map(function (res) {\n            if (_this.getOption('login.alwaysFail')) {\n                throw _this.createFailResponse(data);\n            }\n            return res;\n        }), this.validateToken('login'), map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('login.redirect.success'), [], _this.getOption('messages.getter')('login', res, _this.options), _this.createToken(_this.getOption('token.getter')('login', res, _this.options)));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('errors.getter')('login', res, _this.options);\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('login.redirect.failure'), errors));\n        }));\n    };\n    NbPasswordAuthStrategy.prototype.register = function (data) {\n        var _this = this;\n        var method = this.getOption('register.method');\n        var url = this.getActionEndpoint('register');\n        return this.http.request(method, url, { body: data, observe: 'response' })\n            .pipe(map(function (res) {\n            if (_this.getOption('register.alwaysFail')) {\n                throw _this.createFailResponse(data);\n            }\n            return res;\n        }), this.validateToken('register'), map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('register.redirect.success'), [], _this.getOption('messages.getter')('register', res, _this.options), _this.createToken(_this.getOption('token.getter')('login', res, _this.options)));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('errors.getter')('register', res, _this.options);\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('register.redirect.failure'), errors));\n        }));\n    };\n    NbPasswordAuthStrategy.prototype.requestPassword = function (data) {\n        var _this = this;\n        var method = this.getOption('requestPass.method');\n        var url = this.getActionEndpoint('requestPass');\n        return this.http.request(method, url, { body: data, observe: 'response' })\n            .pipe(map(function (res) {\n            if (_this.getOption('requestPass.alwaysFail')) {\n                throw _this.createFailResponse();\n            }\n            return res;\n        }), map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('requestPass.redirect.success'), [], _this.getOption('messages.getter')('requestPass', res, _this.options));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('errors.getter')('requestPass', res, _this.options);\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('requestPass.redirect.failure'), errors));\n        }));\n    };\n    NbPasswordAuthStrategy.prototype.resetPassword = function (data) {\n        var _this = this;\n        if (data === void 0) { data = {}; }\n        var tokenKey = this.getOption('resetPass.resetPasswordTokenKey');\n        data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n        var method = this.getOption('resetPass.method');\n        var url = this.getActionEndpoint('resetPass');\n        return this.http.request(method, url, { body: data, observe: 'response' })\n            .pipe(map(function (res) {\n            if (_this.getOption('resetPass.alwaysFail')) {\n                throw _this.createFailResponse();\n            }\n            return res;\n        }), map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('resetPass.redirect.success'), [], _this.getOption('messages.getter')('resetPass', res, _this.options));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('errors.getter')('resetPass', res, _this.options);\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('resetPass.redirect.failure'), errors));\n        }));\n    };\n    NbPasswordAuthStrategy.prototype.logout = function () {\n        var _this = this;\n        var method = this.getOption('logout.method');\n        var url = this.getActionEndpoint('logout');\n        return observableOf({})\n            .pipe(switchMap(function (res) {\n            if (!url) {\n                return observableOf(res);\n            }\n            return _this.http.request(method, url, { observe: 'response' });\n        }), map(function (res) {\n            if (_this.getOption('logout.alwaysFail')) {\n                throw _this.createFailResponse();\n            }\n            return res;\n        }), map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('logout.redirect.success'), [], _this.getOption('messages.getter')('logout', res, _this.options));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('errors.getter')('logout', res, _this.options);\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('logout.redirect.failure'), errors));\n        }));\n    };\n    NbPasswordAuthStrategy.prototype.refreshToken = function (data) {\n        var _this = this;\n        var method = this.getOption('refreshToken.method');\n        var url = this.getActionEndpoint('refreshToken');\n        return this.http.request(method, url, { body: data, observe: 'response' })\n            .pipe(map(function (res) {\n            if (_this.getOption('refreshToken.alwaysFail')) {\n                throw _this.createFailResponse(data);\n            }\n            return res;\n        }), this.validateToken('refreshToken'), map(function (res) {\n            return new NbAuthResult(true, res, _this.getOption('refreshToken.redirect.success'), [], _this.getOption('messages.getter')('refreshToken', res, _this.options), _this.createToken(_this.getOption('token.getter')('login', res, _this.options)));\n        }), catchError(function (res) {\n            var errors = [];\n            if (res instanceof HttpErrorResponse) {\n                errors = _this.getOption('errors.getter')('refreshToken', res, _this.options);\n            }\n            else {\n                errors.push('Something went wrong.');\n            }\n            return observableOf(new NbAuthResult(false, res, _this.getOption('refreshToken.redirect.failure'), errors));\n        }));\n    };\n    // TODO: this should be optional\n    // TODO: we can add token.noTokenFailure = true|false\n    // TODO: this should be optional\n    // TODO: we can add token.noTokenFailure = true|false\n    NbPasswordAuthStrategy.prototype.validateToken = \n    // TODO: this should be optional\n    // TODO: we can add token.noTokenFailure = true|false\n    function (module) {\n        var _this = this;\n        return map(function (res) {\n            var token = _this.getOption('token.getter')(module, res, _this.options);\n            if (!token) {\n                var key = _this.getOption('token.key');\n                console.warn(\"NbEmailPassAuthProvider:\\n                          Token is not provided under '\" + key + \"' key\\n                          with getter '\" + _this.getOption('token.getter') + \"', check your auth configuration.\");\n                throw new Error('Could not extract token from the response.');\n            }\n            return res;\n        });\n    };\n    NbPasswordAuthStrategy.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NbPasswordAuthStrategy.ctorParameters = function () { return [\n        { type: HttpClient, },\n        { type: ActivatedRoute, },\n    ]; };\n    return NbPasswordAuthStrategy;\n}(NbAuthStrategy));\nexport { NbPasswordAuthStrategy };\n//# sourceMappingURL=password-strategy.js.map","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-footer',\r\n  styleUrls: ['./footer.component.scss'],\r\n  template: `\r\n    <span class=\"created-by\">Created with ♥ by <b><a href=\"https://akveo.com\" target=\"_blank\">Akveo</a></b> 2017</span>\r\n    <div class=\"socials\">\r\n      <a href=\"#\" target=\"_blank\" class=\"ion ion-social-github\"></a>\r\n      <a href=\"#\" target=\"_blank\" class=\"ion ion-social-facebook\"></a>\r\n      <a href=\"#\" target=\"_blank\" class=\"ion ion-social-twitter\"></a>\r\n      <a href=\"#\" target=\"_blank\" class=\"ion ion-social-linkedin\"></a>\r\n    </div>\r\n  `,\r\n})\r\nexport class FooterComponent {\r\n}\r\n","export * from './header/header.component';\r\nexport * from './footer/footer.component';\r\nexport * from './search-input/search-input.component';\r\nexport * from './tiny-mce/tiny-mce.component';\r\nexport * from './theme-settings/theme-settings.component';\r\nexport * from './theme-switcher/theme-switcher.component';\r\nexport * from './switcher/switcher.component';\r\nexport * from './layout-direction-switcher/layout-direction-switcher.component';\r\nexport * from './theme-switcher/themes-switcher-list/themes-switcher-list.component';\r\n\r\n","import { Component, OnDestroy, Input } from '@angular/core';\r\nimport { NbLayoutDirectionService, NbLayoutDirection } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators/takeWhile';\r\n\r\n@Component({\r\n  selector: 'ngx-layout-direction-switcher',\r\n  template: `\r\n    <ngx-switcher\r\n      [firstValue]=\"directions.RTL\"\r\n      [secondValue]=\"directions.LTR\"\r\n      [firstValueLabel]=\"'RTL'\"\r\n      [secondValueLabel]=\"'LTR'\"\r\n      [value]=\"currentDirection\"\r\n      (valueChange)=\"toggleDirection($event)\"\r\n      [vertical]=\"vertical\"\r\n    >\r\n    </ngx-switcher>\r\n  `,\r\n})\r\nexport class LayoutDirectionSwitcherComponent implements OnDestroy {\r\n  directions = NbLayoutDirection;\r\n  currentDirection: NbLayoutDirection;\r\n  alive = true;\r\n\r\n  @Input() vertical: boolean = false;\r\n\r\n  constructor(private directionService: NbLayoutDirectionService) {\r\n    this.currentDirection = this.directionService.getDirection();\r\n\r\n    this.directionService.onDirectionChange()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(newDirection => this.currentDirection = newDirection);\r\n  }\r\n\r\n  toggleDirection(newDirection) {\r\n    this.directionService.setDirection(newDirection);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-search-input',\r\n  styleUrls: ['./search-input.component.scss'],\r\n  template: `\r\n    <i class=\"control-icon ion ion-ios-search\"\r\n       (click)=\"showInput()\"></i>\r\n    <input placeholder=\"Type your search request here...\"\r\n           #input\r\n           [class.hidden]=\"!isInputShown\"\r\n           (blur)=\"hideInput()\"\r\n           (input)=\"onInput($event)\">\r\n  `,\r\n})\r\nexport class SearchInputComponent {\r\n  @ViewChild('input') input: ElementRef;\r\n\r\n  @Output() search: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  isInputShown = false;\r\n\r\n  showInput() {\r\n    this.isInputShown = true;\r\n    this.input.nativeElement.focus();\r\n  }\r\n\r\n  hideInput() {\r\n    this.isInputShown = false;\r\n  }\r\n\r\n  onInput(val: string) {\r\n    this.search.emit(val);\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-switcher',\r\n  styleUrls: ['./switcher.component.scss'],\r\n  template: `\r\n    <label class=\"switch-label\" [class.vertical]=\"vertical\">\r\n      <span class=\"first\" [class.active]=\"vertical || isFirstValue()\">\r\n        {{vertical ? currentValueLabel() : firstValueLabel}}\r\n      </span>\r\n\r\n      <div class=\"switch\">\r\n        <input type=\"checkbox\" [checked]=\"isSecondValue()\" (change)=\"changeValue()\">\r\n        <span class=\"slider\"></span>\r\n      </div>\r\n\r\n      <span\r\n        *ngIf=\"!vertical\"\r\n        class=\"second\"\r\n        [class.active]=\"isSecondValue()\"\r\n      >\r\n          {{secondValueLabel}}\r\n      </span>\r\n    </label>\r\n  `,\r\n})\r\nexport class SwitcherComponent {\r\n  @Input() firstValue: any;\r\n  @Input() secondValue: any;\r\n\r\n  @Input() firstValueLabel: string;\r\n  @Input() secondValueLabel: string;\r\n\r\n  @Input() vertical: boolean;\r\n\r\n  @Input() value: any;\r\n  @Output() valueChange = new EventEmitter<any>();\r\n\r\n  isFirstValue() {\r\n    return this.value === this.firstValue;\r\n  }\r\n\r\n  isSecondValue() {\r\n    return this.value === this.secondValue;\r\n  }\r\n\r\n  currentValueLabel() {\r\n    return this.isFirstValue()\r\n      ? this.firstValueLabel\r\n      : this.secondValueLabel;\r\n  }\r\n\r\n  changeValue() {\r\n    this.value = this.isFirstValue()\r\n      ? this.secondValue\r\n      : this.firstValue;\r\n\r\n    this.valueChange.emit(this.value);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { StateService } from '../../../@core/data/state.service';\r\n\r\n@Component({\r\n  selector: 'ngx-theme-settings',\r\n  styleUrls: ['./theme-settings.component.scss'],\r\n  template: `\r\n    <h6>LAYOUTS</h6>\r\n    <div class=\"settings-row\">\r\n      <a *ngFor=\"let layout of layouts\"\r\n         href=\"#\"\r\n         [class.selected]=\"layout.selected\"\r\n         [attr.title]=\"layout.name\"\r\n         (click)=\"layoutSelect(layout)\">\r\n        <i [attr.class]=\"layout.icon\"></i>\r\n      </a>\r\n    </div>\r\n    <h6>SIDEBAR</h6>\r\n    <div class=\"settings-row\">\r\n      <a *ngFor=\"let sidebar of sidebars\"\r\n         href=\"#\"\r\n         [class.selected]=\"sidebar.selected\"\r\n         [attr.title]=\"sidebar.name\"\r\n         (click)=\"sidebarSelect(sidebar)\">\r\n        <i [attr.class]=\"sidebar.icon\"></i>\r\n      </a>\r\n    </div>\r\n    <div class=\"switcher\">\r\n      <ngx-layout-direction-switcher [vertical]=\"true\"></ngx-layout-direction-switcher>\r\n    </div>\r\n  `,\r\n})\r\nexport class ThemeSettingsComponent {\r\n\r\n  layouts = [];\r\n  sidebars = [];\r\n\r\n  constructor(protected stateService: StateService) {\r\n    this.stateService.getLayoutStates()\r\n      .subscribe((layouts: any[]) => this.layouts = layouts);\r\n\r\n    this.stateService.getSidebarStates()\r\n      .subscribe((sidebars: any[]) => this.sidebars = sidebars);\r\n  }\r\n\r\n  layoutSelect(layout: any): boolean {\r\n    this.layouts = this.layouts.map((l: any) => {\r\n      l.selected = false;\r\n      return l;\r\n    });\r\n\r\n    layout.selected = true;\r\n    this.stateService.setLayoutState(layout);\r\n    return false;\r\n  }\r\n\r\n  sidebarSelect(sidebars: any): boolean {\r\n    this.sidebars = this.sidebars.map((s: any) => {\r\n      s.selected = false;\r\n      return s;\r\n    });\r\n\r\n    sidebars.selected = true;\r\n    this.stateService.setSidebarState(sidebars);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { NbPopoverDirective } from '@nebular/theme';\r\nimport { NbJSThemeOptions } from '@nebular/theme/services/js-themes/theme.options';\r\n\r\nimport { ThemeSwitcherListComponent } from './themes-switcher-list/themes-switcher-list.component';\r\n\r\n@Component({\r\n  selector: 'ngx-theme-switcher',\r\n  templateUrl: './theme-switcher.component.html',\r\n  styleUrls: ['./theme-switcher.component.scss'],\r\n})\r\nexport class ThemeSwitcherComponent {\r\n  @ViewChild(NbPopoverDirective) popover: NbPopoverDirective;\r\n\r\n  @Input() showTitle: boolean = true;\r\n\r\n  switcherListComponent = ThemeSwitcherListComponent;\r\n  theme: NbJSThemeOptions;\r\n}\r\n","\n    <ul class=\"themes-switcher-list\">\n      <li class=\"themes-switcher-item\"\n          *ngFor=\"let theme of themes\"\n          (click)=\"onToggleTheme(theme.key)\">\n        <i class=\"nb-drop\" [ngClass]=\"'drop-icon-' + theme.key\"></i>\n        <span>{{ theme.title }}</span>\n      </li>\n    </ul>\n  ","import {Component, Input} from '@angular/core';\r\nimport { NbThemeService, NbPopoverDirective } from '@nebular/theme';\r\nimport { AnalyticsService } from '../../../../@core/utils/analytics.service';\r\nimport { NbJSThemeOptions } from '@nebular/theme/services/js-themes/theme.options';\r\n\r\n@Component({\r\n  selector: 'ngx-theme-switcher-list',\r\n  template: `\r\n    <ul class=\"themes-switcher-list\">\r\n      <li class=\"themes-switcher-item\"\r\n          *ngFor=\"let theme of themes\"\r\n          (click)=\"onToggleTheme(theme.key)\">\r\n        <i class=\"nb-drop\" [ngClass]=\"'drop-icon-' + theme.key\"></i>\r\n        <span>{{ theme.title }}</span>\r\n      </li>\r\n    </ul>\r\n  `,\r\n  styleUrls: ['./theme-switcher-list.component.scss'],\r\n})\r\nexport class ThemeSwitcherListComponent {\r\n\r\n  @Input() popover: NbPopoverDirective;\r\n\r\n  theme: NbJSThemeOptions;\r\n\r\n  themes = [\r\n    {\r\n      title: 'Light',\r\n      key: 'default',\r\n    },\r\n    {\r\n      title: 'Cosmic',\r\n      key: 'cosmic',\r\n    },\r\n    {\r\n      title: 'Corporate',\r\n      key: 'corporate',\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private themeService: NbThemeService,\r\n    private analyticsService: AnalyticsService,\r\n  ) {}\r\n\r\n  onToggleTheme(themeKey: string) {\r\n    this.themeService.changeTheme(themeKey);\r\n    this.analyticsService.trackEvent('switchTheme');\r\n    this.popover.hide();\r\n  }\r\n}\r\n","import { Component, OnDestroy, AfterViewInit, Output, EventEmitter, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tiny-mce',\r\n  template: '',\r\n})\r\nexport class TinyMCEComponent implements OnDestroy, AfterViewInit {\r\n\r\n  @Output() editorKeyup = new EventEmitter<any>();\r\n\r\n  editor: any;\r\n\r\n  constructor(private host: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    tinymce.init({\r\n      target: this.host.nativeElement,\r\n      plugins: ['link', 'paste', 'table'],\r\n      skin_url: 'assets/skins/lightgray',\r\n      setup: editor => {\r\n        this.editor = editor;\r\n        editor.on('keyup', () => {\r\n          this.editorKeyup.emit(editor.getContent());\r\n        });\r\n      },\r\n      height: '320',\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    tinymce.remove(this.editor);\r\n  }\r\n}\r\n","export * from './one-column/one-column.layout';\r\nexport * from './two-columns/two-columns.layout';\r\nexport * from './three-columns/three-columns.layout';\r\nexport * from './sample/sample.layout';\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { NbThemeService } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators/takeWhile';\r\n\r\n// TODO: move layouts into the framework\r\n@Component({\r\n  selector: 'ngx-one-column-layout',\r\n  styleUrls: ['./one-column.layout.scss'],\r\n  template: `\r\n    <nb-layout>\r\n      <nb-layout-header fixed>\r\n        <ngx-header></ngx-header>\r\n      </nb-layout-header>\r\n\r\n      <nb-sidebar class=\"menu-sidebar\" tag=\"menu-sidebar\" responsive>\r\n        <ng-content select=\"nb-menu\"></ng-content>\r\n      </nb-sidebar>\r\n\r\n      <nb-layout-column>\r\n        <ng-content select=\"router-outlet\"></ng-content>\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-footer fixed>\r\n        <ngx-footer></ngx-footer>\r\n      </nb-layout-footer>\r\n    </nb-layout>\r\n  `,\r\n})\r\nexport class OneColumnLayoutComponent implements OnDestroy {\r\n\r\n  private alive = true;\r\n\r\n  currentTheme: string;\r\n\r\n  constructor(protected themeService: NbThemeService) {\r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        this.currentTheme = theme.name;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { delay, withLatestFrom, takeWhile } from 'rxjs/operators';\r\nimport {\r\n  NbMediaBreakpoint,\r\n  NbMediaBreakpointsService,\r\n  NbMenuItem,\r\n  NbMenuService,\r\n  NbSidebarService,\r\n  NbThemeService,\r\n} from '@nebular/theme';\r\n\r\nimport { StateService } from '../../../@core/data/state.service';\r\n\r\n// TODO: move layouts into the framework\r\n@Component({\r\n  selector: 'ngx-sample-layout',\r\n  styleUrls: ['./sample.layout.scss'],\r\n  template: `\r\n    <nb-layout [center]=\"layout.id === 'center-column'\" windowMode>\r\n      <nb-layout-header fixed>\r\n        <ngx-header [position]=\"sidebar.id === 'start' ? 'normal': 'inverse'\"></ngx-header>\r\n      </nb-layout-header>\r\n\r\n      <nb-sidebar class=\"menu-sidebar\"\r\n                   tag=\"menu-sidebar\"\r\n                   responsive\r\n                   [end]=\"sidebar.id === 'end'\">\r\n        <nb-sidebar-header *ngIf=\"currentTheme !== 'corporate'\">\r\n          <a href=\"#\" class=\"btn btn-hero-success main-btn\">\r\n            <i class=\"ion ion-social-github\"></i> <span>Support Us</span>\r\n          </a>\r\n        </nb-sidebar-header>\r\n        <ng-content select=\"nb-menu\"></ng-content>\r\n      </nb-sidebar>\r\n\r\n      <nb-layout-column class=\"main-content\">\r\n        <ng-content select=\"router-outlet\"></ng-content>\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-column start class=\"small\" *ngIf=\"layout.id === 'two-column' || layout.id === 'three-column'\">\r\n        <nb-menu [items]=\"subMenu\"></nb-menu>\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-column class=\"small\" *ngIf=\"layout.id === 'three-column'\">\r\n        <nb-menu [items]=\"subMenu\"></nb-menu>\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-footer fixed>\r\n        <ngx-footer></ngx-footer>\r\n      </nb-layout-footer>\r\n\r\n      <nb-sidebar class=\"settings-sidebar\"\r\n                   tag=\"settings-sidebar\"\r\n                   state=\"collapsed\"\r\n                   fixed\r\n                   [end]=\"sidebar.id !== 'end'\">\r\n        <ngx-theme-settings></ngx-theme-settings>\r\n      </nb-sidebar>\r\n    </nb-layout>\r\n  `,\r\n})\r\nexport class SampleLayoutComponent implements OnDestroy {\r\n\r\n  subMenu: NbMenuItem[] = [\r\n    {\r\n      title: 'PAGE LEVEL MENU',\r\n      group: true,\r\n    },\r\n    {\r\n      title: 'Buttons',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/buttons',\r\n    },\r\n    {\r\n      title: 'Grid',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/grid',\r\n    },\r\n    {\r\n      title: 'Icons',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/icons',\r\n    },\r\n    {\r\n      title: 'Modals',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/modals',\r\n    },\r\n    {\r\n      title: 'Typography',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/typography',\r\n    },\r\n    {\r\n      title: 'Animated Searches',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/search-fields',\r\n    },\r\n    {\r\n      title: 'Tabs',\r\n      icon: 'ion ion-android-radio-button-off',\r\n      link: '/pages/ui-features/tabs',\r\n    },\r\n  ];\r\n  layout: any = {};\r\n  sidebar: any = {};\r\n\r\n  private alive = true;\r\n\r\n  currentTheme: string;\r\n\r\n  constructor(protected stateService: StateService,\r\n              protected menuService: NbMenuService,\r\n              protected themeService: NbThemeService,\r\n              protected bpService: NbMediaBreakpointsService,\r\n              protected sidebarService: NbSidebarService) {\r\n    this.stateService.onLayoutState()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((layout: string) => this.layout = layout);\r\n\r\n    this.stateService.onSidebarState()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((sidebar: string) => {\r\n        this.sidebar = sidebar;\r\n      });\r\n\r\n    const isBp = this.bpService.getByName('is');\r\n    this.menuService.onItemSelect()\r\n      .pipe(\r\n        takeWhile(() => this.alive),\r\n        withLatestFrom(this.themeService.onMediaQueryChange()),\r\n        delay(20),\r\n      )\r\n      .subscribe(([item, [bpFrom, bpTo]]: [any, [NbMediaBreakpoint, NbMediaBreakpoint]]) => {\r\n\r\n        if (bpTo.width <= isBp.width) {\r\n          this.sidebarService.collapse('menu-sidebar');\r\n        }\r\n      });\r\n\r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        this.currentTheme = theme.name;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { NbThemeService } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators/takeWhile';\r\n\r\n// TODO: move layouts into the framework\r\n@Component({\r\n  selector: 'ngx-three-columns-layout',\r\n  styleUrls: ['./three-columns.layout.scss'],\r\n  template: `\r\n    <nb-layout>\r\n      <nb-layout-header fixed>\r\n        <ngx-header></ngx-header>\r\n      </nb-layout-header>\r\n\r\n      <nb-sidebar class=\"menu-sidebar\" tag=\"menu-sidebar\" responsive >\r\n        <nb-sidebar-header *ngIf=\"currentTheme !== 'corporate'\">\r\n          <a href=\"#\" class=\"btn btn-hero-success main-btn\">\r\n            <i class=\"ion ion-social-github\"></i> <span>Support Us</span>\r\n          </a>\r\n        </nb-sidebar-header>\r\n        <ng-content select=\"nb-menu\"></ng-content>\r\n      </nb-sidebar>\r\n\r\n      <nb-layout-column class=\"small\">\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-column>\r\n        <ng-content select=\"router-outlet\"></ng-content>\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-column class=\"small\">\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-footer fixed>\r\n        <ngx-footer></ngx-footer>\r\n      </nb-layout-footer>\r\n    </nb-layout>\r\n  `,\r\n})\r\nexport class ThreeColumnsLayoutComponent implements OnDestroy {\r\n\r\n  private alive = true;\r\n\r\n  currentTheme: string;\r\n\r\n  constructor(protected themeService: NbThemeService) {\r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        this.currentTheme = theme.name;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { NbThemeService } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators/takeWhile';\r\n\r\n// TODO: move layouts into the framework\r\n@Component({\r\n  selector: 'ngx-two-columns-layout',\r\n  styleUrls: ['./two-columns.layout.scss'],\r\n  template: `\r\n    <nb-layout>\r\n      <nb-layout-header fixed>\r\n        <ngx-header></ngx-header>\r\n      </nb-layout-header>\r\n\r\n      <nb-sidebar class=\"menu-sidebar\" tag=\"menu-sidebar\" responsive >\r\n        <nb-sidebar-header *ngIf=\"currentTheme !== 'corporate'\">\r\n          <a href=\"#\" class=\"btn btn-hero-success main-btn\">\r\n            <i class=\"ion ion-social-github\"></i> <span>Support Us</span>\r\n          </a>\r\n        </nb-sidebar-header>\r\n        <ng-content select=\"nb-menu\"></ng-content>\r\n      </nb-sidebar>\r\n\r\n      <nb-layout-column class=\"small\">\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-column>\r\n        <ng-content select=\"router-outlet\"></ng-content>\r\n      </nb-layout-column>\r\n\r\n      <nb-layout-footer fixed>\r\n        <ngx-footer></ngx-footer>\r\n      </nb-layout-footer>\r\n\r\n    </nb-layout>\r\n  `,\r\n})\r\nexport class TwoColumnsLayoutComponent implements OnDestroy {\r\n\r\n  private alive = true;\r\n\r\n  currentTheme: string;\r\n\r\n  constructor(protected themeService: NbThemeService) {\r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        this.currentTheme = theme.name;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ngxCapitalize' })\r\nexport class CapitalizePipe implements PipeTransform {\r\n\r\n  transform(input: string): string {\r\n    return input && input.length\r\n      ? (input.charAt(0).toUpperCase() + input.slice(1).toLowerCase())\r\n      : input;\r\n  }\r\n}\r\n","export * from './capitalize.pipe';\r\nexport * from './plural.pipe';\r\nexport * from './round.pipe';\r\nexport * from './timing.pipe';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ngxPlural' })\r\nexport class PluralPipe implements PipeTransform {\r\n\r\n  transform(input: number, label: string, pluralLabel: string = ''): string {\r\n    input = input || 0;\r\n    return input === 1\r\n      ? `${input} ${label}`\r\n      : pluralLabel\r\n        ? `${input} ${pluralLabel}`\r\n        : `${input} ${label}s`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'ngxRound' })\r\nexport class RoundPipe implements PipeTransform {\r\n\r\n  transform(input: number): number {\r\n    return Math.round(input);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'timing' })\r\nexport class TimingPipe implements PipeTransform {\r\n  transform(time: number): string {\r\n    if (time) {\r\n      const minutes = Math.floor(time / 60);\r\n      const seconds = Math.floor(time % 60);\r\n      return `${this.initZero(minutes)}${minutes}:${this.initZero(seconds)}${seconds}`;\r\n    }\r\n\r\n    return '00:00';\r\n  }\r\n\r\n  private initZero(time: number): string {\r\n    return time < 10 ? '0' : '';\r\n  }\r\n}\r\n","export const CORPORATE_THEME = {\r\n  name: 'corporate',\r\n  base: 'default',\r\n  variables: {\r\n    temperature: [\r\n      '#ffa36b',\r\n      '#ffa36b',\r\n      '#ff9e7a',\r\n      '#ff9888',\r\n      '#ff8ea0',\r\n    ],\r\n\r\n    solar: {\r\n      gradientLeft: '#ff8ea0',\r\n      gradientRight: '#ffa36b',\r\n      shadowColor: 'rgba(0, 0, 0, 0)',\r\n      radius: ['80%', '90%'],\r\n    },\r\n\r\n    traffic: {\r\n      colorBlack: '#000000',\r\n      tooltipBg: '#eef2f5',\r\n      tooltipBorderColor: '#eef2f5',\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\r\n      tooltipTextColor: '#2a2a2a',\r\n      tooltipFontWeight: '400',\r\n\r\n      lineBg: '#c0c8d1',\r\n      lineShadowBlur: '0',\r\n      itemColor: '#bcc3cc',\r\n      itemBorderColor: '#bcc3cc',\r\n      itemEmphasisBorderColor: '#74a2ff',\r\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\r\n      shadowLineShadow: 'rgba(0, 0, 0, 0)',\r\n      gradFrom: '#ffffff',\r\n      gradTo: '#ffffff',\r\n    },\r\n\r\n    electricity: {\r\n      tooltipBg: '#edf0f4',\r\n      tooltipLineColor: '#bdc4cd',\r\n      tooltipLineWidth: '0',\r\n      tooltipBorderColor: '#ebeef2',\r\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\r\n      tooltipTextColor: '#2a2a2a',\r\n      tooltipFontWeight: 'bolder',\r\n\r\n      axisLineColor: 'rgba(0, 0, 0, 0)',\r\n      xAxisTextColor: '#2a2a2a',\r\n      yAxisSplitLine: '#ebeef2',\r\n\r\n      itemBorderColor: '#73a1ff',\r\n      lineStyle: 'solid',\r\n      lineWidth: '4',\r\n      lineGradFrom: '#bdc4cd',\r\n      lineGradTo: '#c0c8d1',\r\n      lineShadow: 'rgba(0, 0, 0, 0)',\r\n\r\n      areaGradFrom: 'rgba(255, 255, 255, 0)',\r\n      areaGradTo: 'rgba(255, 255, 255, 0)',\r\n      shadowLineDarkBg: 'rgba(255, 255, 255, 0)',\r\n    },\r\n\r\n    bubbleMap: {\r\n      titleColor: '#484848',\r\n      areaColor: '#dddddd',\r\n      areaHoverColor: '#cccccc',\r\n      areaBorderColor: '#ebeef2',\r\n    },\r\n\r\n    echarts: {\r\n      bg: '#ffffff',\r\n      textColor: '#484848',\r\n      axisLineColor: '#bbbbbb',\r\n      splitLineColor: '#ebeef2',\r\n      itemHoverShadowColor: 'rgba(0, 0, 0, 0.5)',\r\n      tooltipBackgroundColor: '#6a7985',\r\n      areaOpacity: '0.7',\r\n    },\r\n\r\n    chartjs: {\r\n      axisLineColor: '#cccccc',\r\n      textColor: '#484848',\r\n    },\r\n  },\r\n};\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';/* tslint:disable */\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NewLayoutComponent } from '../../components/layouts/layout.component';\r\nimport { HeaderComponent } from '../../components/header/header.component';\r\nimport {\r\n  NbActionsModule,\r\n  NbCardModule,\r\n  NbLayoutModule,\r\n  NbMenuModule,\r\n  NbRouteTabsetModule,\r\n  NbSearchModule,\r\n  NbSidebarModule,\r\n  NbTabsetModule,\r\n  NbThemeModule,\r\n  NbUserModule,\r\n  NbCheckboxModule,\r\n  NbPopoverModule,\r\n  NbContextMenuModule,\r\n} from '@nebular/theme';\r\n\r\nimport { NbSecurityModule } from '@nebular/security';\r\n\r\nimport {\r\n  FooterComponent,\r\n  SearchInputComponent,\r\n  ThemeSettingsComponent,\r\n  SwitcherComponent,\r\n  LayoutDirectionSwitcherComponent,\r\n  ThemeSwitcherComponent,\r\n  TinyMCEComponent,\r\n  ThemeSwitcherListComponent,\r\n} from './components';\r\nimport { CapitalizePipe, PluralPipe, RoundPipe, TimingPipe } from './pipes';\r\nimport {\r\n  OneColumnLayoutComponent,\r\n  SampleLayoutComponent,\r\n  ThreeColumnsLayoutComponent,\r\n  TwoColumnsLayoutComponent,\r\n} from './layouts';\r\nimport { DEFAULT_THEME } from './styles/theme.default';\r\nimport { COSMIC_THEME } from './styles/theme.cosmic';\r\nimport { CORPORATE_THEME } from './styles/theme.corporate';\r\n\r\nconst BASE_MODULES = [CommonModule, FormsModule, ReactiveFormsModule];\r\n\r\nconst NB_MODULES = [\r\n  NbCardModule,\r\n  NbLayoutModule,\r\n  NbTabsetModule,\r\n  NbRouteTabsetModule,\r\n  NbMenuModule,\r\n  NbUserModule,\r\n  NbActionsModule,\r\n  NbSearchModule,\r\n  NbSidebarModule,\r\n  NbCheckboxModule,\r\n  NbPopoverModule,\r\n  NbContextMenuModule,\r\n  NgbModule,\r\n  NbSecurityModule, // *nbIsGranted directive\r\n];\r\n\r\nconst COMPONENTS = [\r\n  SwitcherComponent,\r\n  LayoutDirectionSwitcherComponent,\r\n  ThemeSwitcherComponent,\r\n  ThemeSwitcherListComponent,\r\n  HeaderComponent,\r\n  FooterComponent,\r\n  SearchInputComponent,\r\n  ThemeSettingsComponent,\r\n  TinyMCEComponent,\r\n  OneColumnLayoutComponent,\r\n  NewLayoutComponent,\r\n  ThreeColumnsLayoutComponent,\r\n  TwoColumnsLayoutComponent,\r\n];\r\n\r\nconst ENTRY_COMPONENTS = [\r\n  ThemeSwitcherListComponent,\r\n];\r\n\r\nconst PIPES = [\r\n  CapitalizePipe,\r\n  PluralPipe,\r\n  RoundPipe,\r\n  TimingPipe,\r\n];\r\n\r\nconst NB_THEME_PROVIDERS = [\r\n  ...NbThemeModule.forRoot(\r\n    {\r\n      name: 'corporate',\r\n    },\r\n    [ CORPORATE_THEME ],\r\n  ).providers,\r\n  ...NbSidebarModule.forRoot().providers,\r\n  ...NbMenuModule.forRoot().providers,\r\n];\r\n\r\n@NgModule({\r\n  imports: [...BASE_MODULES, ...NB_MODULES],\r\n  exports: [...BASE_MODULES, ...NB_MODULES, ...COMPONENTS, ...PIPES],\r\n  declarations: [...COMPONENTS, ...PIPES],\r\n  entryComponents: [...ENTRY_COMPONENTS],\r\n})\r\nexport class ThemeModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return <ModuleWithProviders>{\r\n      ngModule: ThemeModule,\r\n      providers: [...NB_THEME_PROVIDERS],\r\n    };\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\n// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n};\r\n","/**\r\n * @license\r\n * Copyright Akveo. All Rights Reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n */\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}